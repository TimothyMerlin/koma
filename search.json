[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/equations.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Equation Syntax Reference","text":"vignette describes syntax specifying stochastic identity equations, priors, lags koma package.","code":""},{"path":"/articles/equations.html","id":"stochastic-equations","dir":"Articles","previous_headings":"Overview","what":"1. Stochastic Equations","title":"Equation Syntax Reference","text":"Stochastic (regression) equations model dependent variable error term. intercept included default.","code":"# With default intercept: consumption ~ gdp + consumption.L(1)  # Without intercept: consumption ~ gdp + consumption.L(1) - 1  # Explicit intercept: consumption ~ 1 + gdp + consumption.L(1)"},{"path":"/articles/equations.html","id":"identity-equations","dir":"Articles","previous_headings":"Overview","what":"2. Identity Equations","title":"Equation Syntax Reference","text":"Identity equations enforce exact relationships.","code":"# Identity equations with explicitly defined weights: # To aggregate the component growth rates into a growth rate for GDP we need to define weights. # This is done by specifying the weights in the equation.  # You can, e.g. use the nominal level weights of the last observed period. gdp == 0.7*consumption + 0.2*investment + 0.2*government - 0.1*net_exports"},{"path":"/articles/equations.html","id":"injected-parameters","dir":"Articles","previous_headings":"Overview","what":"3. Injected Parameters","title":"Equation Syntax Reference","text":"","code":"# Ratios computed from data: gdp == (nom_cons/nom_gdp) * cons"},{"path":"/articles/equations.html","id":"lag-notation","dir":"Articles","previous_headings":"Overview","what":"4. Lag Notation","title":"Equation Syntax Reference","text":"Lags specified L() lag() notation. Ranges combinations supported.","code":"# Single lag: x.L(1) lag(x, 1)  # Range of lags: x.L(1:4) lag(x, 1:4)  # Mix range and specific lags: x.L(1:3, 5)"},{"path":"/articles/equations.html","id":"priors","dir":"Articles","previous_headings":"Overview","what":"5. Priors","title":"Equation Syntax Reference","text":"Specify priors coefficients using curly braces {}.","code":"# normal(1,0.1): {1, 0.1} x3"},{"path":"/articles/equations.html","id":"equation-specific-tau","dir":"Articles","previous_headings":"Overview","what":"6. Equation-specific Tau","title":"Equation Syntax Reference","text":"can override default tau gibbs_settings single equation appending [tau = value] equation. acceptance rate falls outside 30%-60 %, warning emitted.","code":"\"consumption ~ constant + gdp + consumption.L(1) + consumption.L(2) [tau = 1.2]\""},{"path":[]},{"path":"/articles/klein.html","id":"stochastic-equations","dir":"Articles","previous_headings":"Equations of Klein’s Model","what":"Stochastic equations","title":"Estimating Klein's Model I","text":"consumptionCt=β0+α1Pt+α2Pt−1+α3(Wtp+Wtg)+ε1t,investmentIt=β0+β1Pt+β2Pt−1+β3Kt−1+ε2t,private wagesWtp=γ0+γ1Yt+γ2Yt−1+γ3At+ε3t. \\begin{aligned} \\text{consumption}\\quad   C_t     &= \\beta_0 + \\alpha_1 P_t + \\alpha_2 P_{t-1}                                    + \\alpha_3\\bigl(W^p_t + W^g_t\\bigr)                                    + \\varepsilon_{1t},\\\\ \\text{investment}\\quad    I_t     &= \\beta_0  + \\beta_1 P_t + \\beta_2 P_{t-1}                                    + \\beta_3 K_{t-1}                                    + \\varepsilon_{2t},\\\\ \\text{private wages}\\quad W^p_t   &= \\gamma_0 + \\gamma_1 Y_t + \\gamma_2 Y_{t-1}                                    + \\gamma_3 A_t                                    + \\varepsilon_{3t}. \\end{aligned} α\\alpha’s, β\\beta’s, γ\\gamma’s coefficients model. PtP_t private profits, WtpW^p_t private wages, WtgW^g_t government wages, Kt−1K_{t-1} capital stock time t−1t-1, AtA_t time trend. εit\\varepsilon_{} stochastic error terms.","code":""},{"path":"/articles/klein.html","id":"equilibrium-condition","dir":"Articles","previous_headings":"Equations of Klein’s Model","what":"Equilibrium condition","title":"Estimating Klein's Model I","text":"equilibrium demandYt=Ct++Gt \\begin{aligned} \\text{equilibrium demand}\\quad Y_t &= C_t + I_t + G_t \\end{aligned} YtY_t equilibrium demand, CtC_t consumption, ItI_t investment, GtG_t government spending.","code":""},{"path":"/articles/klein.html","id":"identities","dir":"Articles","previous_headings":"Equations of Klein’s Model","what":"Identities","title":"Estimating Klein's Model I","text":"equilibrium demandYt=Ct++Gtprivate profitsPt=Yt−Tt−Wtpcapital stockKt=Kt−1+\\begin{aligned} \\text{equilibrium demand}\\quad Y_t &= C_t + I_t + G_t\\\\ \\text{private profits}\\quad P_t &= Y_t - T_t - W^p_t\\\\ \\text{capital stock}\\quad K_t &= K_{t-1} + I_t \\end{aligned} , TtT_t represents taxes, KtK_t denotes capital stock time tt, GtG_t signifies government spending.","code":""},{"path":"/articles/klein.html","id":"defining-kleins-model-in-r","dir":"Articles","previous_headings":"","what":"Defining Klein’s Model in R","title":"Estimating Klein's Model I","text":"estimate forecast model, need specify equations, exogenous variables, date ranges estimation forecasting. equations string contains model equations, exogenous_variables lists exogenous variables. .L(1) notation indicates lag one period. details syntax, please refer equation syntax documentation.","code":"equations <- \"consumption ~ profits + profits.L(1) + total_wages, investment ~ profits + profits.L(1) + capital_stock.L(1), wages ~ gdp + gdp.L(1) + time_trend, gdp == (n_consumption/n_gdp)*consumption + (n_investment/n_gdp)*investment + (n_government/n_gdp)*government, profits == (n_gdp/n_profits)*gdp - (n_taxes/n_profits)*taxes - (n_wages/n_profits)*wages, capital_stock == 1.001*capital_stock.L(1) + 0.0002*investment, total_wages == (n_wages/n_total_wages)*wages + (n_government_wages/n_total_wages)*government_wages\"  exogenous_variables <- c(\"government\", \"government_wages\", \"taxes\", \"time_trend\")"},{"path":"/articles/klein.html","id":"creating-the-sem","dir":"Articles","previous_headings":"","what":"Creating the SEM","title":"Estimating Klein's Model I","text":"system_of_equations function used create system equations object, can used estimation forecasting.","code":"library(koma)  sys_eq <- system_of_equations(   equations = equations,   exogenous_variables = exogenous_variables )  print(sys_eq) ##  ## ── System of Equations ───────────────────────────────────────────────────────── ##   consumption ~  constant + profits + profits.L(1) + total_wages ##    investment ~  constant + profits + profits.L(1) + capital_stock.L(1) ##         wages ~  constant + gdp + gdp.L(1) + time_trend ##           gdp == (n_consumption/n_gdp) * consumption + (n_investment/n_gdp) * investment + (n_government/n_gdp) * government ##       profits == (n_gdp/n_profits) * gdp-(n_taxes/n_profits) * taxes-(n_wages/n_profits) * wages ## capital_stock == 1.001 * capital_stock.L(1) + 0.0002 * investment ##   total_wages == (n_wages/n_total_wages) * wages + (n_government_wages/n_total_wages) * government_wages"},{"path":"/articles/klein.html","id":"defing-the-estimation-and-forecast-dates","dir":"Articles","previous_headings":"","what":"Defing the Estimation and Forecast Dates","title":"Estimating Klein's Model I","text":"Now, need specify dates estimation forecasting.","code":"dates <- list(   estimation = list(start = c(1990, 1), end = c(2020, 4)),   forecast = list(start = c(2021, 1), end = c(2023, 4)),   dynamic_weights = list(start = c(1990, 1), end = c(2020, 4)) )"},{"path":"/articles/klein.html","id":"preparing-the-data","dir":"Articles","previous_headings":"","what":"Preparing the Data","title":"Estimating Klein's Model I","text":"use klein dataset, contains required variables model. dataset list standard time series (ts) objects, object corresponds variable model. can explore dataset using ?klein command view documentation structure. prepare dataset use koma package, need convert ts objects ets format using as_ets function. model estimated growth rates. klein dataset levels. use ets tell model data levels convert growth rates. ets generalized accept additional attributes. use feature save series’ value_type (real nominal). data prepared, can now proceed estimate model. forecasting, however, need truncate endogenous variables ensure include data forecast start date.","code":"?klein # Some series in the klein dataset are nominal. We need to deflate them using the GDP deflator. klein$profits <- klein$n_profits / (klein$d_gdp / 100) klein$capital_stock <- klein$n_capital_stock / (klein$d_gdp / 100) klein$wages <- klein$n_wages / (klein$d_gdp / 100) klein$government_wages <- klein$n_government_wages / (klein$d_gdp / 100) klein$taxes <- klein$n_taxes / (klein$d_gdp / 100)  real_series <- c(   \"gdp\", \"consumption\", \"investment\", \"profits\", \"capital_stock\",   \"government\", \"wages\", \"government_wages\", \"taxes\" ) real_ts_data <- lapply(real_series, function(x) {   as_ets(klein[[x]],     series_type = \"level\", method = \"diff_log\", value_type = \"real\"   ) }) names(real_ts_data) <- real_series  real_ts_data$total_wages <- real_ts_data$government_wages + real_ts_data$wages  # net exports can be negative, we thus want to use percentage change instead of log difference real_ts_data$net_exports <- as_ets(klein$net_exports,   series_type = \"level\", method = \"percentage\", value_type = \"real\" )  # To compute the weights in the model, we include the nominal series in the dataset as well. nominal_series <- c(   \"n_gdp\", \"n_investment\", \"n_government\", \"n_government_wages\",   \"n_taxes\", \"n_profits\", \"n_wages\", \"n_consumption\" ) nominal_ts_data <- lapply(nominal_series, function(x) {   as_ets(klein[[x]],     series_type = \"level\", method = \"diff_log\", value_type = \"nominal\"   ) }) names(nominal_ts_data) <- nominal_series  nominal_ts_data$n_total_wages <- nominal_ts_data$n_government_wages + nominal_ts_data$n_wages  # Combining the real and nominal series ts_data <- c(real_ts_data, nominal_ts_data)  # Adding the time trend ts_data$time_trend <- ets(seq_len(length(klein$taxes)),   start = stats::start(ts_data$taxes), frequency = 4,   series_type = \"level\", method = \"none\", value_type = NA ) ts_data[sys_eq$endogenous_variables] <-   lapply(sys_eq$endogenous_variables, function(x) {     stats::window(ts_data[[x]], end = c(2020, 4))   })"},{"path":"/articles/klein.html","id":"estimating-the-model","dir":"Articles","previous_headings":"","what":"Estimating the Model","title":"Estimating Klein's Model I","text":"names list elements match variable names used equations. Now, can estimate model using estimate function. see run estimation parallel, refer parallel estimation vignette.","code":"estimates <- estimate(   sys_eq,   ts_data = ts_data,   dates = dates ) ##  ## ── Gibbs Sampler Settings ────────────────────────────────────────────────────── ## ── System Wide Settings ── ## • Number of draws (`ndraws`): 2000 ## • Burn-in ratio (`burnin_ratio`): 0.5 ## • Burn-in (`burnin`): 1000 ## • Store frequency (`nstore`): 1 ## • Number of saved draws (`nsave`): 1000 ## • Tau (`tau`): 1.1 ##  ##  ## ── Estimation ────────────────────────────────────────────────────────────────── print(estimates) ##  ## ── Estimates ─────────────────────────────────────────────────────────────────── ##   consumption ~  - 0.12  +  0.13 * profits - 0.03 * 0.13 * profits.L(1)  +  1.11 * total_wages ##    investment ~  - 0.86  +  0.39 * profits  +  0.16 * 0.39 * profits.L(1)  +  1.51 * capital_stock.L(1) ##         wages ~  - 0.68  +  0.95 * gdp  +  0.43 * 0.95 * gdp.L(1)  +  0 * time_trend ##           gdp == (n_consumption/n_gdp) * consumption  +  (n_investment/n_gdp) * investment  +  (n_government/n_gdp) * government ##       profits == (n_gdp/n_profits) * gdp - (n_taxes/n_profits) * taxes - (n_wages/n_profits) * wages ## capital_stock == 1.001 * capital_stock.L(1)  +  0.0002 * investment ##   total_wages == (n_wages/n_total_wages) * wages  +  (n_government_wages/n_total_wages) * government_wages summary(estimates) ##  ## ================================================================= ##                     consumption     investment     wages          ## ----------------------------------------------------------------- ## constant             -0.12           -0.86          -0.68         ##                     [-0.31;  0.08]  [-1.84; 0.02]  [-1.34; -0.06] ## profits.L(1)         -0.03            0.16                        ##                     [-0.05; -0.00]  [ 0.07; 0.24]                 ## profits               0.13            0.39                        ##                     [ 0.10;  0.16]  [ 0.21; 0.57]                 ## total_wages           1.11                                        ##                     [ 0.97;  1.25]                                ## capital_stock.L(1)                    1.51                        ##                                     [ 0.41; 2.54]                 ## gdp.L(1)                                             0.43         ##                                                    [ 0.30;  0.56] ## time_trend                                           0.00         ##                                                    [-0.00;  0.01] ## gdp                                                  0.95         ##                                                    [ 0.80;  1.10] ## ================================================================= ## Posterior mean (90% credible interval: [5.0%,  95.0%])"},{"path":"/articles/klein.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Estimating Klein's Model I","text":"forecast model, can use forecast function. function generate forecasts specified date range.","code":"forecasts <- forecast(   estimates,   dates = dates ) ##  ## ── Forecast ──────────────────────────────────────────────────────────────────── ## ✔ Forecasting completed. print(forecasts) ##         consumption  investment      wages         gdp   profits capital_stock ## 2021 Q1  -1.2940063 -0.99556028 -0.3387788 -0.82305516 -7.322447      2.503406 ## 2021 Q2  -0.2981365  1.91448090 -0.4060502 -0.04343018  0.315740      2.506293 ## 2021 Q3  -1.2892002  1.09045377 -0.7286282 -0.73506909 -4.884415      2.509017 ## 2021 Q4  -0.9010011  1.68225126 -0.6182451 -0.31225408 -1.282972      2.511862 ## 2022 Q1  -0.7045260  2.27464617 -0.3376342 -0.21102473 -1.210574      2.514829 ## 2022 Q2  -0.9725958  2.00662704 -0.4284649 -0.35510899 -1.942482      2.517745 ## 2022 Q3  -1.6702770  0.55227115 -1.0553909 -0.95145610 -5.411500      2.520374 ## 2022 Q4  -2.0561957 -0.17733502 -1.5230350 -1.17774912 -5.912272      2.522858 ## 2023 Q1  -2.0613849 -0.13030837 -1.6256864 -1.18724541 -5.599824      2.525355 ## 2023 Q2  -1.7606452  0.28464001 -1.4495471 -1.00158969 -4.664612      2.527938 ## 2023 Q3  -2.1741368 -0.45391948 -1.6479523 -1.29640757 -6.954730      2.530375 ## 2023 Q4  -1.8209727 -0.07385907 -1.5616212 -1.07691071 -5.065443      2.532890 ##         total_wages government government_wages      taxes time_trend ## 2021 Q1  -0.3791242  1.2757877       -0.5981850  0.8997407        205 ## 2021 Q2  -0.3776446 -1.0791366       -0.2234124  9.1808930        206 ## 2021 Q3  -0.4831044 -0.3873293        0.8500016  0.3181641        207 ## 2021 Q4  -0.6770865 -0.0707721       -0.9965740  4.6250778        208 ## 2022 Q1  -0.4214105 -0.8533318       -0.8762856  3.5974820        209 ## 2022 Q2  -0.5764775 -0.3751771       -1.3801329 -1.3602277        210 ## 2022 Q3  -0.8201585  0.3882606        0.4570688 -5.3550978        211 ## 2022 Q4  -1.1938060  1.3228264        0.5937889 -6.2183336        212 ## 2023 Q1  -1.2469188  1.2402222        0.8096532 -6.4787268        213 ## 2023 Q2  -1.0767545  0.7228893        0.9473758 -2.6579290        214 ## 2023 Q3  -1.1609521  1.3819458        1.4832848 -2.8205388        215 ## 2023 Q4  -1.1171900  0.8931133        1.2959118 -2.1251498        216 plot(forecasts, variables = \"gdp\")"},{"path":"/articles/parallel.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Executing `koma` in Parallel","text":"vignette demonstrates use future::plan function run koma package functions either sequentially parallel, depending operating system preferences. details, see future package documentation: https://cran.r-project.org/web/packages/future/future.pdf","code":""},{"path":"/articles/parallel.html","id":"preliminaries","dir":"Articles","previous_headings":"","what":"Preliminaries","title":"Executing `koma` in Parallel","text":"Install future parallelly packages: use simulated data contained koma illustrate use future::plan. setup following:","code":"install.packages(\"future\") install.packages(\"parallelly\") library(koma)  equations <- \"consumption ~ gdp + consumption.L(1), investment ~ investment.L(1), exports ~ world_gdp + exports.L(1), imports ~ domestic_demand + imports.L(1), prices ~ exchange_rate + oil_price + prices.L(1), interest_rate ~ prices + interest_rate_germany + prices.L(1), gdp == 0.6*consumption + 0.6*domestic_demand + 0.5*exports - 0.4*imports, domestic_demand == 0.6*consumption + 0.4*investment\"  exogenous_variables <- c(\"world_gdp\", \"interest_rate_germany\", \"exchange_rate\", \"oil_price\")  dates <- list(   estimation = list(start = c(1996, 1), end = c(2019, 4)),   forecast = list(start = c(2023, 1), end = c(2023, 4)) )  sys_eq <- system_of_equations(equations, exogenous_variables)  series <- names(small_open_economy) series <- series[!series %in% c(\"interest_rate\", \"interest_rate_germany\")]  ts_data <- lapply(series, function(x) {   as_ets(small_open_economy[[x]],     series_type = \"level\", method = \"diff_log\"   ) }) names(ts_data) <- series  ts_data$interest_rate <- as_ets(small_open_economy$interest_rate,   series_type = \"rate\", method = \"none\" ) ts_data$interest_rate_germany <- as_ets(small_open_economy$interest_rate_germany,   series_type = \"rate\", method = \"none\" )"},{"path":"/articles/parallel.html","id":"sequential-execution","dir":"Articles","previous_headings":"","what":"Sequential Execution","title":"Executing `koma` in Parallel","text":"default, R executes code sequentially. example:","code":"out_estimation <- estimate(ts_data, sys_eq, dates)"},{"path":"/articles/parallel.html","id":"parallel-execution-with-futureplan","dir":"Articles","previous_headings":"","what":"Parallel Execution with future::plan","title":"Executing `koma` in Parallel","text":"enable parallel execution, can use future::plan. type parallel execution depends operating system whether running code cluster.","code":""},{"path":"/articles/parallel.html","id":"worker-setup","dir":"Articles","previous_headings":"Parallel Execution with future::plan","what":"Worker Setup","title":"Executing `koma` in Parallel","text":"need define number workers parallel job run . use cores except one.","code":"# Get the available workers workers <- parallelly::availableCores(omit = 1)"},{"path":"/articles/parallel.html","id":"windows","dir":"Articles","previous_headings":"Parallel Execution with future::plan","what":"Windows","title":"Executing `koma` in Parallel","text":"Windows, can use multisession:","code":"future::plan(\"future::multisession\", workers = workers)  out_estimation <- estimate(ts_data, sys_eq, dates)"},{"path":"/articles/parallel.html","id":"unix-like-systems","dir":"Articles","previous_headings":"Parallel Execution with future::plan","what":"Unix-like systems","title":"Executing `koma` in Parallel","text":"Unix-like systems, can use multicore:","code":"future::plan(\"future::multicore\", workers = workers)  out_estimation <- estimate(ts_data, sys_eq, dates)"},{"path":"/articles/small_macro_model.html","id":"equations-of-the-small-macro-model","dir":"Articles","previous_headings":"","what":"Equations of the Small Macro Model","title":"Estimating Small Macro Model for Switzerland","text":"Stochastic equations ConsumptionCt=β1+β1,2Ct−1+γ1,7Yt+ε1t,InvestmentIt=β2+β2,3It−1+ε2t,ExportsXt=β3+β3,4Xt−1+β3,7WGDPt+ε3t,ImportsMt=β4+γ4,8Dt+β4,5It−1+ε4t,PricesPt=β5+β5,9ERt+β5,10OPt+β5,6Pt−1+ε5t,Interest RateRt=β6+β6,6Pt−1+β6,8RGE,t+γ6,5Pt+ε6t. \\begin{aligned} \\text{Consumption}\\quad C_t &= \\beta_1 + \\beta_{1,2} C_{t-1} + \\gamma_{1,7} Y_t + \\varepsilon_{1t},\\\\ \\text{Investment}\\quad I_t &= \\beta_2 + \\beta_{2,3} I_{t-1} + \\varepsilon_{2t},\\\\ \\text{Exports}\\quad X_t &= \\beta_3 + \\beta_{3,4} X_{t-1} + \\beta_{3,7} WGDP_t + \\varepsilon_{3t},\\\\ \\text{Imports}\\quad M_t &= \\beta_4 + \\gamma_{4,8} D_t + \\beta_{4,5} I_{t-1} + \\varepsilon_{4t},\\\\ \\text{Prices}\\quad P_t &= \\beta_5 + \\beta_{5,9} ER_t + \\beta_{5,10} OP_t       + \\beta_{5,6} P_{t-1} + \\varepsilon_{5t},\\\\ \\text{Interest Rate}\\quad R_t &= \\beta_6 + \\beta_{6,6} P_{t-1} + \\beta_{6,8} R_{GE,t}       + \\gamma_{6,5} P_t + \\varepsilon_{6t}. \\end{aligned} Equilibrium condition Equilibrium OuputGDPt=0.6*Ct+0.6*Dt+0.5*Xt−0.4*\\begin{aligned} \\text{Equilibrium Ouput}\\quad GDP_t &= 0.6*C_t + 0.6*D_t + 0.5*X_t - 0.4*I_t \\end{aligned} Identities Domestic DemandDt=0.6*Ct+0.4*\\begin{aligned} \\text{Domestic Demand}\\quad D_t &= 0.6*C_t + 0.4*I_t \\end{aligned} Coefficients - β\\beta’s γ\\gamma’s structural coefficients estimated. Endogenous variables {GDP_t}{Equilibrium output (demand), defined .} Exogenous variables {}{German interest rate time }. variables {epsilon_it}{Stochastic error term equation time .}","code":""},{"path":"/articles/small_macro_model.html","id":"defining-the-sem-in-r","dir":"Articles","previous_headings":"","what":"Defining the SEM in R","title":"Estimating Small Macro Model for Switzerland","text":"estimate forecast model, need specify equations, exogenous variables, date ranges estimation forecasting. equations string contains model equations, exogenous_variables lists exogenous variables. .L(1) notation indicates lag one period. details syntax, please refer equation syntax documentation.","code":"equations <- \"consumption ~ gdp + consumption.L(1), investment ~ investment.L(1), exports ~ world_gdp + exports.L(1), imports ~ domestic_demand + imports.L(1), prices ~ exchange_rate + oil_price + prices.L(1), interest_rate ~ prices + interest_rate_germany + prices.L(1), gdp == 0.6*consumption + 0.6*domestic_demand + 0.5*exports - 0.4*imports, domestic_demand == 0.6*consumption + 0.4*investment\"  exogenous_variables <- c(\"world_gdp\", \"interest_rate_germany\", \"exchange_rate\", \"oil_price\")"},{"path":"/articles/small_macro_model.html","id":"creating-the-sem","dir":"Articles","previous_headings":"","what":"Creating the SEM","title":"Estimating Small Macro Model for Switzerland","text":"system_of_equations function used create system equations object, can used estimation forecasting.","code":"library(koma)  sys_eq <- system_of_equations(   equations = equations,   exogenous_variables = exogenous_variables )  print(sys_eq) ##  ## ── System of Equations ───────────────────────────────────────────────────────── ##     consumption ~  constant + gdp + consumption.L(1) ##      investment ~  constant + investment.L(1) ##         exports ~  constant + world_gdp + exports.L(1) ##         imports ~  constant + domestic_demand + imports.L(1) ##          prices ~  constant + exchange_rate + oil_price + prices.L(1) ##   interest_rate ~  constant + prices + interest_rate_germany + prices.L(1) ##             gdp == 0.6 * consumption + 0.6 * domestic_demand + 0.5 * exports-0.4 * imports ## domestic_demand == 0.6 * consumption + 0.4 * investment"},{"path":"/articles/small_macro_model.html","id":"defing-the-estimation-and-forecast-dates","dir":"Articles","previous_headings":"","what":"Defing the Estimation and Forecast Dates","title":"Estimating Small Macro Model for Switzerland","text":"Now, need specify dates estimation forecasting.","code":"dates <- list(   estimation = list(start = c(1996, 1), end = c(2019, 4)),   forecast = list(start = c(2023, 1), end = c(2023, 4)) )"},{"path":"/articles/small_macro_model.html","id":"preparing-the-data","dir":"Articles","previous_headings":"","what":"Preparing the Data","title":"Estimating Small Macro Model for Switzerland","text":"use small_open_economy dataset, contains required variables model. dataset list standard time series (ts) objects, object corresponds variable model. can explore dataset using ?small_open_economy command view documentation structure. prepare dataset use koma package, need convert ts objects ets format using as_ets function. model estimated growth rates. small_open_economy dataset levels. use ets tell model data levels convert growth rates. ets generalized accept additional attributes. use feature save series’ value_type (real nominal). data prepared, can now proceed estimate model. forecasting, however, need truncate endogenous variables ensure include data forecast start date.","code":"?small_open_economy series <- names(small_open_economy) series <- series[!series %in% c(\"interest_rate\", \"interest_rate_germany\")]  ts_data <- lapply(series, function(x) {   as_ets(small_open_economy[[x]],     series_type = \"level\", method = \"diff_log\"   ) }) names(ts_data) <- series  ts_data$interest_rate <- as_ets(small_open_economy$interest_rate,   series_type = \"rate\", method = \"none\" ) ts_data$interest_rate_germany <- as_ets(small_open_economy$interest_rate_germany,   series_type = \"rate\", method = \"none\" ) ts_data[sys_eq$endogenous_variables] <-   lapply(sys_eq$endogenous_variables, function(x) {     stats::window(ts_data[[x]], end = c(2019, 4))   })"},{"path":"/articles/small_macro_model.html","id":"estimating-the-model","dir":"Articles","previous_headings":"","what":"Estimating the Model","title":"Estimating Small Macro Model for Switzerland","text":"names list elements match variable names used equations. Now, can estimate model using estimate function. see run estimation parallel, refer parallel estimation vignette.","code":"estimates <- estimate(   sys_eq,   ts_data = ts_data,   dates = dates ) ##  ## ── Gibbs Sampler Settings ────────────────────────────────────────────────────── ## ── System Wide Settings ── ## • Number of draws (`ndraws`): 2000 ## • Burn-in ratio (`burnin_ratio`): 0.5 ## • Burn-in (`burnin`): 1000 ## • Store frequency (`nstore`): 1 ## • Number of saved draws (`nsave`): 1000 ## • Tau (`tau`): 1.1 ##  ##  ## ── Estimation ────────────────────────────────────────────────────────────────── ##  ## ── ⚠ MCMC Acceptance Probability Warnings ────────────────────────────────────── ## • consumption: 60.7% ##  ## ℹ Some acceptance probabilities are outside the recommended range (20%-60%). ## Consider revising the equations, tuning each equation's tau, or adjusting your priors. print(estimates) ##  ## ── Estimates ─────────────────────────────────────────────────────────────────── ##     consumption ~  0.36 - 0.03 * gdp  +  0.11 * consumption.L(1) ##      investment ~  0.45  +  0.21 * investment.L(1) ##         exports ~  - 0.29  +  3.2 * world_gdp - 0.3 * exports.L(1) ##         imports ~  - 0.05  +  2.61 * domestic_demand - 0.11 * imports.L(1) ##          prices ~  0.04  +  0.03 * exchange_rate  +  0.01 * oil_price  +  0.56 * prices.L(1) ##   interest_rate ~  - 0.51  +  0.47 * prices  +  0.57 * interest_rate_germany - 0.19 * 0.47 * prices.L(1) ##             gdp == 0.6 * consumption  +  0.6 * domestic_demand  +  0.5 * exports - 0.4 * imports ## domestic_demand == 0.6 * consumption  +  0.4 * investment summary(estimates) ##  ## =============================================================================================================== ##                        consumption    investment    exports         imports        prices        interest_rate  ## --------------------------------------------------------------------------------------------------------------- ## constant                 0.36          0.45          -0.29           -0.05          0.04          -0.51         ##                        [ 0.28; 0.46]  [0.19; 0.71]  [-0.86;  0.32]  [-0.55; 0.44]  [0.01; 0.06]  [-0.63; -0.40] ## consumption.L(1)         0.11                                                                                   ##                        [-0.08; 0.29]                                                                            ## gdp                     -0.03                                                                                   ##                        [-0.13; 0.06]                                                                            ## investment.L(1)                        0.21                                                                     ##                                       [0.03; 0.40]                                                              ## exports.L(1)                                         -0.30                                                      ##                                                     [-0.48; -0.13]                                              ## world_gdp                                             3.20                                                      ##                                                     [ 2.27;  4.05]                                              ## imports.L(1)                                                         -0.11                                      ##                                                                     [-0.28; 0.06]                               ## domestic_demand                                                       2.61                                      ##                                                                     [ 1.62; 3.74]                               ## prices.L(1)                                                                         0.56          -0.19         ##                                                                                    [0.46; 0.66]  [-0.60;  0.21] ## exchange_rate                                                                       0.03                        ##                                                                                    [0.02; 0.05]                 ## oil_price                                                                           0.01                        ##                                                                                    [0.01; 0.01]                 ## interest_rate_germany                                                                              0.57         ##                                                                                                  [ 0.52;  0.62] ## prices                                                                                             0.47         ##                                                                                                  [ 0.05;  0.96] ## =============================================================================================================== ## Posterior mean (90% credible interval: [5.0%,  95.0%]) summary(estimates, variables = \"investment\") ##  ## ============================= ##                  investment   ## ----------------------------- ## constant          0.45        ##                  [0.19; 0.71] ## investment.L(1)   0.21        ##                  [0.03; 0.40] ## ============================= ## Posterior mean (90% credible interval: [5.0%,  95.0%])"},{"path":"/articles/small_macro_model.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"Estimating Small Macro Model for Switzerland","text":"forecast model, can use forecast function. function generate forecasts specified date range.","code":"forecasts <- forecast(   estimates,   dates = dates ) ##  ## ── Forecast ──────────────────────────────────────────────────────────────────── ## ✔ Forecasting completed. ## ✔ Forecasting completed. print(forecasts) ##         consumption investment   exports  imports       prices interest_rate ## 2023 Q1   0.3856023  0.5694451 1.2785726 1.033484 -0.056041196     0.8415619 ## 2023 Q2   0.3929089  0.5694450 0.6326627 1.048218 -0.069807507     1.2598407 ## 2023 Q3   0.3901838  0.5694450 0.8800770 1.042363  0.014919830     1.5836742 ## 2023 Q4   0.3970220  0.5694450 0.3740086 1.053709 -0.008441888     1.6966126 ##               gdp domestic_demand world_gdp interest_rate_germany exchange_rate ## 2023 Q1 0.7327378       0.4591394 0.4827344              2.388667     0.9217413 ## 2023 Q2 0.4109035       0.4635233 0.4083410              3.146000    -1.3863355 ## 2023 Q3 0.5343367       0.4618883 0.4259099              3.639333    -1.7869351 ## 2023 Q4 0.2833288       0.4659912 0.2905613              3.885000    -0.7501833 ##         oil_price ## 2023 Q1 -8.752037 ## 2023 Q2 -3.378704 ## 2023 Q3  9.900140 ## 2023 Q4 -3.337319 rate(forecasts$mean$gdp) ## rate, diff_log, c(192510.114596192, 2022.75) ##           Qtr1      Qtr2      Qtr3      Qtr4 ## 2023 0.7327378 0.4109035 0.5343367 0.2833288 level(forecasts$mean$gdp) ## level, diff_log ##          Qtr1     Qtr2     Qtr3     Qtr4 ## 2022                            192510.1 ## 2023 193925.9 194724.4 195767.6 196323.1"},{"path":"/articles/small_macro_model.html","id":"conditional-forecasting","dir":"Articles","previous_headings":"Forecasting","what":"Conditional Forecasting","title":"Estimating Small Macro Model for Switzerland","text":"Conditional forecasting allows impose restrictions certain variables forecast period fix values. useful scenario analysis policy evaluation, forecasts reflect user-defined conditions.","code":"fig <- plot(forecasts, variables = \"prices\") fig  restrictions <- list(prices = list(value = 0.5, horizon = 1))  forecasts <- forecast(estimates,   dates = dates,   restrictions = restrictions ) plot(forecasts, fig = fig, variables = \"prices\") forecasts$mean$prices"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samad Sarferaz. Author, copyright holder. Laurent Florin. Author. Merlin Scherer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sarferaz S, Florin L, Scherer M (2025). koma: Large Scale Macroeconomic Model. R package version 0.1.0.","code":"@Manual{,   title = {koma: A Large Scale Macroeconomic Model},   author = {Samad Sarferaz and Laurent Florin and Merlin Scherer},   year = {2025},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"koma---large-macroeconomic-model","dir":"","previous_headings":"","what":"A Large Scale Macroeconomic Model","title":"A Large Scale Macroeconomic Model","text":"⚠️ Beta Release: package active development (v0.1.0). Core features working exported functions may change bugs possible. Please report issues GitHub.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Large Scale Macroeconomic Model","text":"install latest version KOMA package GitHub:","code":"# Install from GitHub devtools::install_github(\"timothymerlin/koma\")  # Or using renv renv::install(\"github::timothymerlin/koma\", rebuild = TRUE)"},{"path":"/reference/adjust_constant_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Constant Vector Using Identity Weights — adjust_constant_vector","title":"Adjust Constant Vector Using Identity Weights — adjust_constant_vector","text":"Adjusts given constant vector based list identity weights. identity weights used replace specific elements constant vector corresponding numeric values.","code":""},{"path":"/reference/adjust_constant_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Constant Vector Using Identity Weights — adjust_constant_vector","text":"","code":"adjust_constant_vector(constant_vector, identity_weights)"},{"path":"/reference/adjust_constant_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Constant Vector Using Identity Weights — adjust_constant_vector","text":"constant_vector numeric vector representing constant terms adjusted. identity_weights list element corresponds set identity rules.","code":""},{"path":"/reference/adjust_constant_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Constant Vector Using Identity Weights — adjust_constant_vector","text":"adjusted constant vector numeric form modified values based identity weights.","code":""},{"path":"/reference/as_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an mets koma_ts object to a list — as_list","title":"Convert an mets koma_ts object to a list — as_list","text":"Convert mets koma_ts object list","code":""},{"path":"/reference/as_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an mets koma_ts object to a list — as_list","text":"","code":"as_list(x, ...)"},{"path":"/reference/as_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an mets koma_ts object to a list — as_list","text":"x object converted. ... Additional arguments.","code":""},{"path":"/reference/as_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an mets koma_ts object to a list — as_list","text":"list ets koma_ts objects.","code":""},{"path":"/reference/as_mets.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list object with ets koma_ts objects to a koma_ts multivariate time series (mets) — as_mets","title":"Convert a list object with ets koma_ts objects to a koma_ts multivariate time series (mets) — as_mets","text":"Convert list object ets koma_ts objects koma_ts multivariate time series (mets)","code":""},{"path":"/reference/as_mets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list object with ets koma_ts objects to a koma_ts multivariate time series (mets) — as_mets","text":"","code":"as_mets(x, ...)"},{"path":"/reference/as_mets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list object with ets koma_ts objects to a koma_ts multivariate time series (mets) — as_mets","text":"x object converted. ... Additional arguments.","code":""},{"path":"/reference/as_mets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list object with ets koma_ts objects to a koma_ts multivariate time series (mets) — as_mets","text":"koma_ts multivariate time series object.","code":""},{"path":"/reference/attach_color_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach Color Codes to Data Frame Based on Status — attach_color_code","title":"Attach Color Codes to Data Frame Based on Status — attach_color_code","text":"function maps status_column values provided data frame color codes, based specified color mapping, attaches color codes new column color_code data frame.","code":""},{"path":"/reference/attach_color_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach Color Codes to Data Frame Based on Status — attach_color_code","text":"","code":"attach_color_code(df_long, marker_color, status_column)"},{"path":"/reference/attach_color_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach Color Codes to Data Frame Based on Status — attach_color_code","text":"df_long data frame containing column specified status_column indicates status sample. marker_color named list key-value mapping structure names keys correspond statuses values correspond color codes. status_column name column df_long contains status information.","code":""},{"path":"/reference/attach_color_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach Color Codes to Data Frame Based on Status — attach_color_code","text":"data frame identical df_long, additional column color_code contains color codes mapped status_column based marker_color mapping.","code":""},{"path":"/reference/beta_vectorization.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorize Beta Matrix — beta_vectorization","title":"Vectorize Beta Matrix — beta_vectorization","text":"Converts character representation beta matrix transformation matrix constant vector, vector = transformation_matrix %*% parameters + constant_vector vector = vec(character_beta_matrix)","code":""},{"path":"/reference/beta_vectorization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorize Beta Matrix — beta_vectorization","text":"","code":"beta_vectorization(character_beta_matrix)"},{"path":"/reference/beta_vectorization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorize Beta Matrix — beta_vectorization","text":"character_beta_matrix character matrix representing beta structure model.","code":""},{"path":"/reference/beta_vectorization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorize Beta Matrix — beta_vectorization","text":"list three elements: transformation_matrix numeric matrix used parameter transformation. parameters character vector parameter names. constant_vector numeric vector constant terms.","code":""},{"path":"/reference/calculate_eq_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Dynamic Weights for Identity Equations — calculate_eq_weights","title":"Calculate Dynamic Weights for Identity Equations — calculate_eq_weights","text":"Computes weights required identity equations using time series data. weights represent components collectively sum related aggregate value specified time period.","code":""},{"path":"/reference/calculate_eq_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Dynamic Weights for Identity Equations — calculate_eq_weights","text":"","code":"calculate_eq_weights(ts_data, iden, start, end)"},{"path":"/reference/calculate_eq_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Dynamic Weights for Identity Equations — calculate_eq_weights","text":"ts_data named list stats::ts objects. contain time series data aggregate value components. Ensure ts_data contains time series listed iden. start numeric value representing start date time series data subset. value numeric format used function dates_to_num. end numeric value representing end date time series data subset, numeric format start.","code":""},{"path":"/reference/calculate_eq_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Dynamic Weights for Identity Equations — calculate_eq_weights","text":"list stats::ts objects containing calculated weights given aggregate value components. top-level name list aggregate value, sub-level names correspond component names.","code":""},{"path":"/reference/calculate_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Forecast Error — calculate_error","title":"Calculate the Forecast Error — calculate_error","text":"function calculates desired forecast errors desired variables given true values forecasts","code":""},{"path":"/reference/calculate_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Forecast Error — calculate_error","text":"","code":"calculate_error(forecasts, realized, variables)"},{"path":"/reference/calculate_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Forecast Error — calculate_error","text":"forecasts mets-object containing forecasts. realized mets-object containing true values. variables character vector name(s) stochastic endogenous variable forecast error(s) calculated.","code":""},{"path":"/reference/calculate_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Forecast Error — calculate_error","text":"List errors","code":""},{"path":"/reference/compute_forecast_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Forecast Based on Companion Matrix and Reduced Form — compute_forecast_values","title":"Compute Forecast Based on Companion Matrix and Reduced Form — compute_forecast_values","text":"function calculates forecast given set parameters data. computes baseline forecasts applies certain restrictions specified.","code":""},{"path":"/reference/compute_forecast_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Forecast Based on Companion Matrix and Reduced Form — compute_forecast_values","text":"","code":"compute_forecast_values(   companion_matrix,   reduced_form,   y_matrix,   forecast_x_matrix,   horizon,   freq,   start_forecast,   endogenous_variables,   restrictions )"},{"path":"/reference/compute_forecast_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Forecast Based on Companion Matrix and Reduced Form — compute_forecast_values","text":"companion_matrix list containing components companion matrix. reduced_form list containing reduced form components. y_matrix Matrix dependent variable time series data. forecast_x_matrix matrix forecasting data exogenous variables. horizon Forecasting horizon, specifying number periods. freq Frequency time series data. start_forecast vector format c(YEAR, QUARTER) representing start date forecast. endogenous_variables character vector containing names endogenous variables. restrictions List model constraints. Default empty.","code":""},{"path":"/reference/compute_forecast_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Forecast Based on Companion Matrix and Reduced Form — compute_forecast_values","text":"matrix base forecast Y.","code":""},{"path":"/reference/concat.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate two time series — concat","title":"Concatenate two time series — concat","text":"Concatenate two time series","code":""},{"path":"/reference/concat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate two time series — concat","text":"","code":"concat(x, y, ...)"},{"path":"/reference/concat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate two time series — concat","text":"x koma_ts object. y koma_ts object concatenated x. ... arguments passed methods (unused default method).","code":""},{"path":"/reference/conditional_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Fill and Forecast for Time Series Data — conditional_fill","title":"Conditional Fill and Forecast for Time Series Data — conditional_fill","text":"function fills missing observations extends time series data including current quarter. function conditionally forecasts based estimates realized observations.","code":""},{"path":"/reference/conditional_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional Fill and Forecast for Time Series Data — conditional_fill","text":"","code":"conditional_fill(ts_data, sys_eq, dates, estimates, point_forecast)"},{"path":"/reference/conditional_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional Fill and Forecast for Time Series Data — conditional_fill","text":"ts_data Time-series data set estimation. sys_eq koma_seq object (system_of_equations) containing details system equations used model. dates Key-value list date ranges various model operations. estimates Optional. koma_estimate object (see estimate) containing estimates previously estimated simultaneous equations model. Use parameter equations system need re-estimated. point_forecast list options used ragged edge filled contains: active: Determines type forecast generated. TRUE, density forecast created. FALSE, point forecast returned. Default TRUE. central_tendency character string indicating central tendency measure (\"mean\" \"median\") use point_forecast$active TRUE. Default \"mean\".","code":""},{"path":"/reference/conditional_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional Fill and Forecast for Time Series Data — conditional_fill","text":"extended time series list containing filled forecasted time series current quarter.","code":""},{"path":"/reference/construct_balanced_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Balanced Data — construct_balanced_data","title":"Construct Balanced Data — construct_balanced_data","text":"Construct Balanced Data","code":""},{"path":"/reference/construct_balanced_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Balanced Data — construct_balanced_data","text":"","code":"construct_balanced_data(   ts_data,   endogenous_variables,   total_exogenous_variables,   start,   end,   state = NULL )"},{"path":"/reference/construct_balanced_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Balanced Data — construct_balanced_data","text":"ts_data Time series data. endogenous_variables Endogenous variables. total_exogenous_variables Exogenous / predetermined variables include x matrix. start Start date truncation. end End date truncation. state environment used share mutable state function calls, particularly issuing warnings forecasting process.","code":""},{"path":"/reference/construct_balanced_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Balanced Data — construct_balanced_data","text":"list containing truncated time series data, y_matrix, x_matrix number observations, date last observation frequency.","code":""},{"path":"/reference/construct_beta_hat_j_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct \\(\\hat{\\beta_j}\\) — construct_beta_hat_j_matrix","title":"Construct \\(\\hat{\\beta_j}\\) — construct_beta_hat_j_matrix","text":"\\(\\hat{\\beta_j} = (x_b'x_b)^{-1} x_b' Z_j\\) \\(x_b\\) predetermined variables constant equation \\(j\\) \\(Z_j = y_j - Y_j * \\gamma_j\\)","code":""},{"path":"/reference/construct_beta_hat_j_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct \\(\\hat{\\beta_j}\\) — construct_beta_hat_j_matrix","text":"","code":"construct_beta_hat_j_matrix(x_matrix, z_matrix_j, character_beta_matrix, jx)"},{"path":"/reference/construct_beta_hat_j_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct \\(\\hat{\\beta_j}\\) — construct_beta_hat_j_matrix","text":"x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. z_matrix_j \\(Z_j = y_j - Y_j * \\gamma_j\\) matrix. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\).","code":""},{"path":"/reference/construct_beta_hat_j_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct \\(\\hat{\\beta_j}\\) — construct_beta_hat_j_matrix","text":"\\(\\hat{\\beta_j}\\) dimensions \\(k \\times 1\\).","code":""},{"path":"/reference/construct_beta_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Beta Matrix — construct_beta_matrix","title":"Construct Beta Matrix — construct_beta_matrix","text":"Constructs B matrix based given system equations exogenous variables.","code":""},{"path":"/reference/construct_beta_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Beta Matrix — construct_beta_matrix","text":"","code":"construct_beta_matrix(equations, exogenous_variables)"},{"path":"/reference/construct_beta_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Beta Matrix — construct_beta_matrix","text":"equations character string containing system equations, equations separated commas. exogenous_variables character vector representing exogenous variables.","code":""},{"path":"/reference/construct_beta_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Beta Matrix — construct_beta_matrix","text":"Beta matrix.","code":""},{"path":"/reference/construct_companion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Companion Matrices for Dynamic SEM — construct_companion_matrix","title":"Construct Companion Matrices for Dynamic SEM — construct_companion_matrix","text":"Construct Companion Matrices Dynamic SEM","code":""},{"path":"/reference/construct_companion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Companion Matrices for Dynamic SEM — construct_companion_matrix","text":"","code":"construct_companion_matrix(posterior, exogenous_variables)"},{"path":"/reference/construct_companion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Companion Matrices for Dynamic SEM — construct_companion_matrix","text":"posterior list containing gamma_matrix, beta_matrix,  sigma_matrix phi_matrix derived LIBA estimates. exogenous_variables character vector names exogenous variables.","code":""},{"path":"/reference/construct_companion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Companion Matrices for Dynamic SEM — construct_companion_matrix","text":"list containing matrices companion form: phi_matrix, beta_tilde_matrix, gamma_matrix, c_matrix, values n p.","code":""},{"path":"/reference/construct_gamma_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Gamma Matrix — construct_gamma_matrix","title":"Construct Gamma Matrix — construct_gamma_matrix","text":"Constructs Gamma matrix based given system equations endogenous variables. function constructs Gamma matrix, diagonal matrix representing coefficients endogenous variables system equations. Gamma matrix used various econometric models. also returns constructed weights parameters.","code":""},{"path":"/reference/construct_gamma_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Gamma Matrix — construct_gamma_matrix","text":"","code":"construct_gamma_matrix(equations, endogenous_variables)"},{"path":"/reference/construct_gamma_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Gamma Matrix — construct_gamma_matrix","text":"equations character string containing system equations, equations separated commas. endogenous_variables character vector representing endogenous variables.","code":""},{"path":"/reference/construct_gamma_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Gamma Matrix — construct_gamma_matrix","text":"Gamma matrix.","code":""},{"path":"/reference/construct_phi.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Dynamic SEM (Structural Equation Model) Phi Matrix — construct_phi","title":"Construct a Dynamic SEM (Structural Equation Model) Phi Matrix — construct_phi","text":"function constructs Phi matrix given system equations beta matrix. processes equations find lagged endogenous variables uses build Phi matrix, used dynamic SEM: Y * Gamma = X_tilde B_tilde + Y(-1) * Phi(1) + ... + Y(-p) * Phi(L) + U.","code":""},{"path":"/reference/construct_phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Dynamic SEM (Structural Equation Model) Phi Matrix — construct_phi","text":"","code":"construct_phi(sys_eq, beta_matrix)"},{"path":"/reference/construct_phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Dynamic SEM (Structural Equation Model) Phi Matrix — construct_phi","text":"sys_eq list containing system equations. Must include $equations equations system, $endogenous_variables names endogenous variables, $total_exogenous_variables names exogenous variables. beta_matrix numeric matrix beta coefficients corresponding exogenous variables system equations.","code":""},{"path":"/reference/construct_phi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Dynamic SEM (Structural Equation Model) Phi Matrix — construct_phi","text":"list matrices representing Phi(L) matrix given system equations.","code":""},{"path":"/reference/construct_pi_hat_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct reduced form coefficients \\(\\Pi_0\\) — construct_pi_hat_0","title":"Construct reduced form coefficients \\(\\Pi_0\\) — construct_pi_hat_0","text":"Computes estimated \\(\\Pi_0\\), \\((k \\times n_j)\\) matrix reduced form coefficients, \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/construct_pi_hat_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct reduced form coefficients \\(\\Pi_0\\) — construct_pi_hat_0","text":"","code":"construct_pi_hat_0(x_matrix, z_matrix_j)"},{"path":"/reference/construct_pi_hat_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct reduced form coefficients \\(\\Pi_0\\) — construct_pi_hat_0","text":"x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. z_matrix_j \\(Z_j = y_j - Y_j * \\gamma_j\\) matrix.","code":""},{"path":"/reference/construct_pi_hat_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct reduced form coefficients \\(\\Pi_0\\) — construct_pi_hat_0","text":"\\(\\hat{\\Pi_0}\\) dimensions \\((k \\times n_j)\\).","code":""},{"path":"/reference/construct_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Posterior Matrices from LIBA Estimates — construct_posterior","title":"Construct Posterior Matrices from LIBA Estimates — construct_posterior","text":"function constructs posterior matrices using LIBA estimates. primarily focuses posterior median.","code":""},{"path":"/reference/construct_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Posterior Matrices from LIBA Estimates — construct_posterior","text":"","code":"construct_posterior(sys_eq, estimate)"},{"path":"/reference/construct_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Posterior Matrices from LIBA Estimates — construct_posterior","text":"sys_eq list containing detailed components system equations equations, endogenous_variables, identities, character_gamma_matrix, character_beta_matrix. estimate draw contains beta, gamma omega tilde estimates.","code":""},{"path":"/reference/construct_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Posterior Matrices from LIBA Estimates — construct_posterior","text":"list containing gamma_matrix, beta_matrix, sigma_matrix phi_matrix derived LIBA estimates.","code":""},{"path":"/reference/construct_priors_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct priors for a single equation — construct_priors_j","title":"Construct priors for a single equation — construct_priors_j","text":"construct_priors_j generates prior hyperparameters equation jx based user-specified priors model's coefficient matrices.","code":""},{"path":"/reference/construct_priors_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct priors for a single equation — construct_priors_j","text":"","code":"construct_priors_j(priors, character_gamma_matrix, character_beta_matrix, jx)"},{"path":"/reference/construct_priors_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct priors for a single equation — construct_priors_j","text":"priors priors \\(\\theta\\) equation \\(j\\). character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\).","code":""},{"path":"/reference/construct_priors_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct priors for a single equation — construct_priors_j","text":"list elements: theta_mean: prior means exogenous coefficients intercept. theta_vcv: prior variance-covariance matrix exogenous terms. omega_df: degrees freedom error covariance prior. omega_scale: scale matrix error covariance prior. gamma_mean: prior means endogenous coefficients (set). gamma_vcv: prior variance-covariance endogenous terms.","code":""},{"path":"/reference/construct_reduced_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Reduced Form Parameters from Companion Matrix — construct_reduced_form","title":"Construct Reduced Form Parameters from Companion Matrix — construct_reduced_form","text":"function computes reduced form parameters companion_pi, companion_theta, companion_d using provided companion_matrix.","code":""},{"path":"/reference/construct_reduced_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Reduced Form Parameters from Companion Matrix — construct_reduced_form","text":"","code":"construct_reduced_form(companion_matrix)"},{"path":"/reference/construct_reduced_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Reduced Form Parameters from Companion Matrix — construct_reduced_form","text":"companion_matrix list containing matrices beta_tilde_matrix, phi_matrix, gamma_matrix, c_matrix used calculate reduced form parameters.","code":""},{"path":"/reference/construct_reduced_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Reduced Form Parameters from Companion Matrix — construct_reduced_form","text":"list containing matrices companion_pi, companion_theta, companion_d represent reduced form parameters","code":""},{"path":"/reference/construct_theta_bar_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct \\(\\bar{\\Theta}_j\\) — construct_theta_bar_j","title":"Construct \\(\\bar{\\Theta}_j\\) — construct_theta_bar_j","text":"Computes posterior mean \\(\\hat{\\Theta}_j\\) informative priors, \\((k \\times (1 + n_j))\\) matrix, \\(n_j\\) number endogenous variables equation \\(j\\) k number exogenous variables.","code":""},{"path":"/reference/construct_theta_bar_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct \\(\\bar{\\Theta}_j\\) — construct_theta_bar_j","text":"","code":"construct_theta_bar_j(x_matrix, z_matrix_j, priors_j, omega_tilde_jw)"},{"path":"/reference/construct_theta_bar_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct \\(\\bar{\\Theta}_j\\) — construct_theta_bar_j","text":"x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. z_matrix_j \\(Z_j = y_j - Y_j * \\gamma_j\\) matrix. omega_tilde_jw variance-covariance matrix \\(\\tilde{\\Omega}_j = '_j \\Omega_j A_j\\) row \\(j\\).","code":""},{"path":"/reference/construct_theta_bar_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct \\(\\bar{\\Theta}_j\\) — construct_theta_bar_j","text":"\\(\\hat{\\Theta}_j\\) dimensions \\((k \\times (1 + n_j))\\).","code":""},{"path":"/reference/construct_theta_bar_j.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct \\(\\bar{\\Theta}_j\\) — construct_theta_bar_j","text":"\\(  \\bar{\\Theta}_j = \\overline{\\Xi} \\left(    kron(\\tilde{\\Omega},X'X) \\hat{\\theta} +    \\underline{\\Xi}^{-1} \\underline{\\theta}    \\right) \\)","code":""},{"path":"/reference/construct_theta_hat_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct \\(\\hat{\\Theta}_j\\) — construct_theta_hat_j","title":"Construct \\(\\hat{\\Theta}_j\\) — construct_theta_hat_j","text":"Computes OLS estimate \\(\\hat{\\Theta}_j\\), \\((k \\times (1 + n_j))\\) matrix, \\(n_j\\) number endogenous variables equation \\(j\\) k number exogenous variables.","code":""},{"path":"/reference/construct_theta_hat_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct \\(\\hat{\\Theta}_j\\) — construct_theta_hat_j","text":"","code":"construct_theta_hat_j(x_matrix, z_matrix_j)"},{"path":"/reference/construct_theta_hat_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct \\(\\hat{\\Theta}_j\\) — construct_theta_hat_j","text":"x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. z_matrix_j \\(Z_j = y_j - Y_j * \\gamma_j\\) matrix.","code":""},{"path":"/reference/construct_theta_hat_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct \\(\\hat{\\Theta}_j\\) — construct_theta_hat_j","text":"\\(\\hat{\\Theta}_j\\) dimensions \\((k \\times (1 + n_j))\\).","code":""},{"path":"/reference/construct_theta_hat_j.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct \\(\\hat{\\Theta}_j\\) — construct_theta_hat_j","text":"\\(\\hat{\\Theta}_j = (X'X)^{-1}X' Z_j\\)","code":""},{"path":"/reference/construct_y_matrix_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a matrix of endogenous variables appearing in equation j — construct_y_matrix_j","title":"Constructs a matrix of endogenous variables appearing in equation j — construct_y_matrix_j","text":"extracts \\((T x n_j)\\) matrix endogenous variables appearing equation \\(j\\), \\(T\\) number observations \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/construct_y_matrix_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a matrix of endogenous variables appearing in equation j — construct_y_matrix_j","text":"","code":"construct_y_matrix_j(y_matrix, character_gamma_matrix, jx)"},{"path":"/reference/construct_y_matrix_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a matrix of endogenous variables appearing in equation j — construct_y_matrix_j","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. jx index equation \\(j\\).","code":""},{"path":"/reference/construct_y_matrix_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a matrix of endogenous variables appearing in equation j — construct_y_matrix_j","text":"equation \\(j\\) contains \\(\\gamma\\) parameters, function returns subset \\(Y\\). gamma parameters, function returns NA.","code":""},{"path":"/reference/construct_z_matrix_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Z_j — construct_z_matrix_j","title":"Construct Z_j — construct_z_matrix_j","text":"\\(Z_j = [ \\, y_j - Y_j * \\gamma_j, Y_j ] \\,\\)","code":""},{"path":"/reference/construct_z_matrix_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Z_j — construct_z_matrix_j","text":"","code":"construct_z_matrix_j(gamma_parameters_j, y_matrix, y_matrix_j, jx)"},{"path":"/reference/construct_z_matrix_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Z_j — construct_z_matrix_j","text":"gamma_parameters_j \\((n_j \\times 1)\\) matrix parameters \\(\\gamma\\) matrix, \\(n_j\\) number endogenous variables equation \\(j\\). y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. y_matrix_j \\((T \\times n_j)\\) matrix endogenous variables appearing equation \\(j\\), \\(T\\) number observations \\(n_j\\) number endogenous variables equation \\(j\\). jx index equation \\(j\\).","code":""},{"path":"/reference/construct_z_matrix_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Z_j — construct_z_matrix_j","text":"\\(Z_j\\) matrix dimensions \\(T \\times 2\\)","code":""},{"path":"/reference/create_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Plotly Annotations at Ticks — create_annotations","title":"Create Plotly Annotations at Ticks — create_annotations","text":"Generates list annotations Plotly plots based x tick position. function designed create text annotations specific points plot, -sample --sample ticks, customizable y positions formatting.","code":""},{"path":"/reference/create_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Plotly Annotations at Ticks — create_annotations","text":"","code":"create_annotations(   x_ticks,   y_position,   font = list(family = NULL, size = NULL) )"},{"path":"/reference/create_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Plotly Annotations at Ticks — create_annotations","text":"x_ticks data frame containing tick information. Must include columns year x-axis positions, value text annotations, color_code color text. y_position Numeric value specifying y-axis position annotations, typically paper coordinates (0 1). font list specifying font attributes annotation text, optional family size components customize font family size, respectively. specified, default Plotly text properties used.","code":""},{"path":"/reference/create_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Plotly Annotations at Ticks — create_annotations","text":"list lists, inner list represents annotation format required Plotly. annotation includes properties position, text, formatting.","code":""},{"path":"/reference/create_lagged_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Lagged Variables for Time Series Data — create_lagged_variables","title":"Create Lagged Variables for Time Series Data — create_lagged_variables","text":"function creates lagged variables given time series data, considering provided endogenous exogenous variables along predetermined variables. lagged variables created based pattern predetermined variables.","code":""},{"path":"/reference/create_lagged_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Lagged Variables for Time Series Data — create_lagged_variables","text":"","code":"create_lagged_variables(   ts_data,   endogenous_variables,   exogenous_variables,   predetermined_variables )"},{"path":"/reference/create_lagged_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Lagged Variables for Time Series Data — create_lagged_variables","text":"ts_data named list time series objects. endogenous_variables character vector names endogenous variables. exogenous_variables character vector names exogenous variables. predetermined_variables character vector names predetermined variables, contains lag information format \"var.L(k)\" \"var\" variable name \"k\" lag (e.g., \"var.L(1)\" first lag variable \"var\").","code":""},{"path":"/reference/create_lagged_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Lagged Variables for Time Series Data — create_lagged_variables","text":"named list time series objects lagged variables added according predetermined pattern.","code":""},{"path":"/reference/dates_to_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Date to Numeric Format — dates_to_num","title":"Convert Date to Numeric Format — dates_to_num","text":"function converts vector, list, 2-element numeric vector years quarters numeric representation. format year + (quarter - 1) / frequency, frequency number periods year (e.g., 4 quarters).","code":""},{"path":"/reference/dates_to_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Date to Numeric Format — dates_to_num","text":"","code":"dates_to_num(x, frequency, ...)"},{"path":"/reference/dates_to_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Date to Numeric Format — dates_to_num","text":"x numeric vector length 2 (year, quarter), list vectors. single year, pass just year scalar. frequency numeric value indicating number periods year (e.g., 4 quarters, 12 months). ... Additional arguments passed methods.","code":""},{"path":"/reference/dates_to_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Date to Numeric Format — dates_to_num","text":"numeric representation date(s).","code":""},{"path":"/reference/dates_to_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Dates to String Format — dates_to_str","title":"Convert Dates to String Format — dates_to_str","text":"function converts dates represented two-element numeric vector (year, period), Date, POSIXct, list , character. quarterly data (frequency = 4), returns \"YYYY Qn\". monthly data (frequency = 12), returns \"YYYY-MM\". Otherwise, returns \"YYYY-MM-DD\".","code":""},{"path":"/reference/dates_to_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Dates to String Format — dates_to_str","text":"","code":"dates_to_str(x, frequency, ...)"},{"path":"/reference/dates_to_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Dates to String Format — dates_to_str","text":"x numeric vector length 2 (year, period), Date, POSIXct, list . frequency integer number periods per year (e.g., 4 = quarters, 12 = months). ... Additional arguments passed methods.","code":""},{"path":"/reference/dates_to_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Dates to String Format — dates_to_str","text":"character string list character strings.","code":""},{"path":"/reference/detect_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the edge of a list of time series — detect_edge","title":"Detect the edge of a list of time series — detect_edge","text":"Identify either earliest end latest start date across set ts objects, relative given start end bounds.","code":""},{"path":"/reference/detect_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the edge of a list of time series — detect_edge","text":"","code":"detect_edge(ts_data, start, end, direction = c(\"end\", \"start\"))"},{"path":"/reference/detect_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the edge of a list of time series — detect_edge","text":"ts_data Named list ts objects inspect. start Numeric lower bound trimming series. end Numeric upper bound trimming series. direction Character; either \"end\" (default) find earliest end date, \"start\" find latest start date.","code":""},{"path":"/reference/detect_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the edge of a list of time series — detect_edge","text":"list components: date: detected edge date (numeric). variable_names: Names series achieving edge.","code":""},{"path":"/reference/detect_lag.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Lag Number from Variable Name — detect_lag","title":"Detect Lag Number from Variable Name — detect_lag","text":"function takes variable name input extracts lag number . lag number assumed positive integer preceded letter 'L'.","code":""},{"path":"/reference/detect_lag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Lag Number from Variable Name — detect_lag","text":"","code":"detect_lag(variable_name)"},{"path":"/reference/detect_lag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Lag Number from Variable Name — detect_lag","text":"variable_name character string representing variable name.","code":""},{"path":"/reference/detect_lag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Lag Number from Variable Name — detect_lag","text":"integer representing detected lag number variable name. Returns NA lag detected.","code":""},{"path":"/reference/draw_gamma_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw gamma parameters for equation j — draw_gamma_j","title":"Draw gamma parameters for equation j — draw_gamma_j","text":"draw_gamma_j draws \\(\\gamma\\) parameters given posterior distribution equation \\(j\\), Metropolis-Hastings algorithm.","code":""},{"path":"/reference/draw_gamma_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw gamma parameters for equation j — draw_gamma_j","text":"","code":"draw_gamma_j(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_parameters_j,   tau,   cholesky_of_inverse_hessian )"},{"path":"/reference/draw_gamma_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw gamma parameters for equation j — draw_gamma_j","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_parameters_j \\((n_j \\times 1)\\) matrix parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\). tau tuning scalar \\(\\tau\\) adjust acceptance rate. cholesky_of_inverse_hessian Cholesky factor \\(L\\) inverse Hessian matrix \\(M^{-1}\\) used generate candidate draws.","code":""},{"path":"/reference/draw_gamma_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw gamma parameters for equation j — draw_gamma_j","text":"\\((n_j \\times 1)\\) matrix either accepted candidate previous gamma parameters. Returns 0 endogenous variables equation \\(j\\).","code":""},{"path":"/reference/draw_gamma_j_informative.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw gamma parameters for equation j — draw_gamma_j_informative","title":"Draw gamma parameters for equation j — draw_gamma_j_informative","text":"draw_gamma_j_informative draws \\(\\gamma\\) parameters given posterior distribution equation \\(j\\), Metropolis-Hastings algorithm.","code":""},{"path":"/reference/draw_gamma_j_informative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw gamma parameters for equation j — draw_gamma_j_informative","text":"","code":"draw_gamma_j_informative(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_jw,   tau,   cholesky_of_inverse_hessian,   omega_jw,   theta_jw,   priors_j )"},{"path":"/reference/draw_gamma_j_informative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw gamma parameters for equation j — draw_gamma_j_informative","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_jw \\((n_j \\times 1)\\) vector parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\). tau tuning scalar \\(\\tau\\) adjust acceptance rate. cholesky_of_inverse_hessian Cholesky factor \\(L\\) inverse Hessian matrix \\(M^{-1}\\) used generate candidate draws. omega_jw \\({\\Omega}_j^{(w)}\\) theta_jw \\((k \\times nj+1)\\), \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/draw_gamma_j_informative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw gamma parameters for equation j — draw_gamma_j_informative","text":"\\((n_j \\times 1)\\) matrix either accepted candidate previous gamma parameters. Returns 0 endogenous variables equation \\(j\\).","code":""},{"path":"/reference/draw_omega_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j","text":"draw_omega_j draws variance-covariance matrix \\(\\tilde{\\Omega}_j\\) row \\([ u_j,  V_j ]\\).","code":""},{"path":"/reference/draw_omega_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j","text":"","code":"draw_omega_j(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_parameters_j )"},{"path":"/reference/draw_omega_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\).","code":""},{"path":"/reference/draw_omega_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j","text":"List containing \\({\\tilde{\\Omega}}_j^{(w)}\\) omega_tilde_jw \\(\\Omega_j^{(w)}\\) omega_jw.","code":""},{"path":"/reference/draw_omega_j_informative.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j_informative","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j_informative","text":"draw_omega_j_informative draws variance-covariance matrix \\(\\tilde{\\Omega}_j\\) row \\([ u_j,  V_j ]\\).","code":""},{"path":"/reference/draw_omega_j_informative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j_informative","text":"","code":"draw_omega_j_informative(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_jw,   theta_jw,   priors_j )"},{"path":"/reference/draw_omega_j_informative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j_informative","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_jw \\((n_j \\times 1)\\) vector parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\). theta_jw \\((k \\times nj+1)\\), \\(n_j\\) number endogenous variables equation \\(j\\). priors_j priors \\(\\omega\\) equation \\(j\\).","code":""},{"path":"/reference/draw_omega_j_informative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Omega from inverse Wishart distribution for equation j — draw_omega_j_informative","text":"List containing \\({\\tilde{\\Omega}}_j^{(w)}\\) omega_tilde_jw \\(\\Omega_j^{(w)}\\) omega_jw.","code":""},{"path":"/reference/draw_parameters_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Parameters for equation j — draw_parameters_j","title":"Draw Parameters for equation j — draw_parameters_j","text":"draw_parameters_j simulates posterior model's parameters equation \\(j\\) separately. posterior simulated using Metropolis-within-Gibbs sampling procedure.","code":""},{"path":"/reference/draw_parameters_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Parameters for equation j — draw_parameters_j","text":"","code":"draw_parameters_j(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx )"},{"path":"/reference/draw_parameters_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Parameters for equation j — draw_parameters_j","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\).","code":""},{"path":"/reference/draw_parameters_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Parameters for equation j — draw_parameters_j","text":"list containing matrices saved draws parameters additional diagnostic information.","code":""},{"path":"/reference/draw_parameters_j.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw Parameters for equation j — draw_parameters_j","text":"sampler works follows: Initialize sampler Conditional \\(\\Omega^{(w-1)}\\) data draw \\(delta_{\\gamma}\\). Conditional \\(delta_{\\gamma}^{(w)}\\) draw \\(\\Omega^{(w)}\\). Conditional \\(Omega^{(w)}\\) \\(\\delta_{\\gamma}^{(w)}\\) draw \\(\\delta_\\beta^{(w)}\\). Go back step 2.","code":""},{"path":"/reference/draw_parameters_j_informative.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Parameters for equation j — draw_parameters_j_informative","title":"Draw Parameters for equation j — draw_parameters_j_informative","text":"draw_parameters_j_informative simulates posterior model's parameters equation \\(j\\) separately using informative prior. posterior simulated using Metropolis-within-Gibbs sampling procedure.","code":""},{"path":"/reference/draw_parameters_j_informative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Parameters for equation j — draw_parameters_j_informative","text":"","code":"draw_parameters_j_informative(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   priors )"},{"path":"/reference/draw_parameters_j_informative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Parameters for equation j — draw_parameters_j_informative","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). priors priors \\(\\theta\\) equation \\(j\\).","code":""},{"path":"/reference/draw_parameters_j_informative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Parameters for equation j — draw_parameters_j_informative","text":"list containing matrices saved draws parameters additional diagnostic information.","code":""},{"path":"/reference/draw_parameters_j_informative.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw Parameters for equation j — draw_parameters_j_informative","text":"sampler works follows: Initialize sampler: \\(delta_{\\gamma}^{(0)}\\) \\(\\Omega^{(0)}\\) Conditional \\(delta_{\\gamma}^{(w-1)}\\) \\(\\Omega^{(w-1)}\\) data draw \\(delta_{\\theta}\\). Conditional \\(delta_{\\gamma}^{(w-1)}\\), \\(delta_{\\theta}^{(w)}\\) draw \\(\\Omega^{(w)}\\). Conditional \\(delta_{\\theta}^{(w)}\\), \\(Omega^{(w)}\\) draw \\(\\delta_{\\gamma}^{(w)}\\). Go back step 2.","code":""},{"path":"/reference/draw_theta_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Theta from multivariate normal distribution for equation j — draw_theta_j","title":"Draw Theta from multivariate normal distribution for equation j — draw_theta_j","text":"Draw Theta multivariate normal distribution equation j","code":""},{"path":"/reference/draw_theta_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Theta from multivariate normal distribution for equation j — draw_theta_j","text":"","code":"draw_theta_j(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_parameters_j,   omega_tilde_jw )"},{"path":"/reference/draw_theta_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Theta from multivariate normal distribution for equation j — draw_theta_j","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_parameters_j \\((n_j \\times 1)\\) matrix parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/draw_theta_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Theta from multivariate normal distribution for equation j — draw_theta_j","text":"List containing theta_jw beta_jw","code":""},{"path":"/reference/draw_theta_j_informative.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Theta from multivariate normal distribution for equation j draw_theta_j_informative draw \\(\\theta\\) parameters from a given posterior distribution for an equation \\(j\\). — draw_theta_j_informative","title":"Draw Theta from multivariate normal distribution for equation j draw_theta_j_informative draw \\(\\theta\\) parameters from a given posterior distribution for an equation \\(j\\). — draw_theta_j_informative","text":"Draw Theta multivariate normal distribution equation j draw_theta_j_informative draw \\(\\theta\\) parameters given posterior distribution equation \\(j\\).","code":""},{"path":"/reference/draw_theta_j_informative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Theta from multivariate normal distribution for equation j draw_theta_j_informative draw \\(\\theta\\) parameters from a given posterior distribution for an equation \\(j\\). — draw_theta_j_informative","text":"","code":"draw_theta_j_informative(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_jw,   omega_jw,   priors_j )"},{"path":"/reference/draw_theta_j_informative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Theta from multivariate normal distribution for equation j draw_theta_j_informative draw \\(\\theta\\) parameters from a given posterior distribution for an equation \\(j\\). — draw_theta_j_informative","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_jw \\((n_j \\times 1)\\) vector parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\). omega_jw \\({\\Omega}_j^{(w)}\\)","code":""},{"path":"/reference/draw_theta_j_informative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Theta from multivariate normal distribution for equation j draw_theta_j_informative draw \\(\\theta\\) parameters from a given posterior distribution for an equation \\(j\\). — draw_theta_j_informative","text":"List containing theta_jw beta_jw","code":""},{"path":"/reference/estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Simultaneous Equations Model (SEM) — estimate","title":"Estimate the Simultaneous Equations Model (SEM) — estimate","text":"Estimate system simultaneous equations model (SEM) using Bayesian approach. function incorporates Gibbs sampling allows density point forecasts.","code":""},{"path":"/reference/estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Simultaneous Equations Model (SEM) — estimate","text":"","code":"estimate(   ts_data,   sys_eq,   dates,   ...,   options = list(),   point_forecast = NULL,   estimates = NULL )"},{"path":"/reference/estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Simultaneous Equations Model (SEM) — estimate","text":"ts_data Time-series data set estimation. sys_eq koma_seq object (system_of_equations) containing details system equations used model. dates Key-value list date ranges various model operations. ... Additional parameters. options Optional settings modifying Gibbs sampler specifications equations. See Gibbs Sampler Specifications. point_forecast list contains following elements: active: Determines type forecast generated. TRUE, point forecast created. FALSE, density forecast returned. Default TRUE. central_tendency: character string indicating central tendency measure (\"mean\" \"median\") use summary statistics. Default \"mean\". estimates Optional. koma_estimate object (see estimate) containing estimates previously estimated simultaneous equations model. Use parameter equations system need re-estimated.","code":""},{"path":"/reference/estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Simultaneous Equations Model (SEM) — estimate","text":"object class koma_estimate. object class koma_estimateis list containing following elements: estimates estimated parameters relevant information obtained model. sys_eq koma_seq object containing details system equations used model. ts_data time-series data used estimation, NA values removed lagged variables created. y_matrix Y matrix constructed balanced data, used estimation process. x_matrix X matrix constructed balanced data, used estimation process. gibbs_specifications specifications used Gibbs sampling.","code":""},{"path":"/reference/estimate.html","id":"parallel","dir":"Reference","previous_headings":"","what":"Parallel","title":"Estimate the Simultaneous Equations Model (SEM) — estimate","text":"function provides option parallel computing future::plan() function. detailed example executing estimate parallel, see vignette: vignette(\"parallel\"). details, see future package documentation.","code":""},{"path":"/reference/estimate.html","id":"gibbs-sampler-specifications","dir":"Reference","previous_headings":"","what":"Gibbs Sampler Specifications","title":"Estimate the Simultaneous Equations Model (SEM) — estimate","text":"ndraws: Integer specifying number Gibbs sampler draws. Default 2000. burnin_ratio: Numeric specifying ratio burn-period. Default 0.5. nstore: Integer specifying frequency stored draws. Default 1. tau: Numeric tuning parameter enforcing acceptance rate. Default 1.1.","code":""},{"path":[]},{"path":"/reference/estimate_sem.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Parameters in a System of Equations — estimate_sem","title":"Estimate Parameters in a System of Equations — estimate_sem","text":"function estimates parameters given system equations using either single thread parallel computing.","code":""},{"path":"/reference/estimate_sem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Parameters in a System of Equations — estimate_sem","text":"","code":"estimate_sem(sys_eq, y_matrix, x_matrix, eq_jx = NULL)"},{"path":"/reference/estimate_sem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Parameters in a System of Equations — estimate_sem","text":"sys_eq koma_seq object (system_of_equations) containing details system equations used model. y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. eq_jx numeric vector indicating indices endogenous equations \\(j\\) estimated. NULL, endogenous equations estimated. vector contain positive integers corresponding positions equations within endogenous_variables list.","code":""},{"path":"/reference/estimate_sem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Parameters in a System of Equations — estimate_sem","text":"List estimates endogenous variables.","code":""},{"path":"/reference/estimate_sem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Parameters in a System of Equations — estimate_sem","text":"function provides option parallel computing future::plan() function. details, see future package documentation: https://cran.r-project.org/web/packages/future/future.pdf","code":""},{"path":"/reference/extend_ts_with_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend Time Series List with Forecast Values at New Dates — extend_ts_with_forecast","title":"Extend Time Series List with Forecast Values at New Dates — extend_ts_with_forecast","text":"function takes named list original time series extends series forecast values multi-time series (mts) dates already original time series.","code":""},{"path":"/reference/extend_ts_with_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend Time Series List with Forecast Values at New Dates — extend_ts_with_forecast","text":"","code":"extend_ts_with_forecast(ts_list, forecast_mts)"},{"path":"/reference/extend_ts_with_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend Time Series List with Forecast Values at New Dates — extend_ts_with_forecast","text":"ts_list named list original time series objects. forecast_mts multi-time series object forecast values. column names match names ts_list.","code":""},{"path":"/reference/extend_ts_with_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend Time Series List with Forecast Values at New Dates — extend_ts_with_forecast","text":"named list time series objects, extended forecast values new dates . time series whose names present forecast_mts, original time series returned unmodified.","code":""},{"path":"/reference/extend_ts_with_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extend Time Series List with Forecast Values at New Dates — extend_ts_with_forecast","text":"function extend time series ts_list appending forecast values forecast_mts. extension occur dates already exist original time series.","code":""},{"path":"/reference/extract_estimates_from_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Median Estimates — extract_estimates_from_draws","title":"Extract Median Estimates — extract_estimates_from_draws","text":"function computes either central tendency estimates (median mean) returns estimates specific draw gamma, beta, sigma matrices. mainly used internally construct_posterior function.","code":""},{"path":"/reference/extract_estimates_from_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Median Estimates — extract_estimates_from_draws","text":"","code":"extract_estimates_from_draws(   sys_eq,   estimates,   jx = NULL,   central_tendency = \"mean\" )"},{"path":"/reference/extract_estimates_from_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Median Estimates — extract_estimates_from_draws","text":"sys_eq list containing detailed components system equations endogenous_variables, total_exogenous_variables, identity_equations, character_beta_matrix, character_gamma_matrix. estimates list estimates, obtained previous estimation procedures. jx index set posterior constructed estimate draw jx, otherwise posterior constructed using median estimates. default posterior constructed using median estimates. central_tendency character string indicating central tendency measure (\"mean\" \"median\") use. Default \"mean\". Active jx NULL.","code":""},{"path":"/reference/extract_estimates_from_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Median Estimates — extract_estimates_from_draws","text":"list containing: gamma_matrix: Either central tendency estimates specific draw estimates gamma values, depending jx. beta_matrix: Either central tendency estimates specific draw estimates beta values, depending jx. sigma_matrix: Either central tendency estimates specific draw estimates sigma values, depending jx.","code":""},{"path":"/reference/extract_lagged_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Lagged Variables from Equations — extract_lagged_vars","title":"Extract Lagged Variables from Equations — extract_lagged_vars","text":"function extracts lagged variables given system equations using provided pattern defines lagged variables structured. iterates equation, finds matching lag expressions, standardizes form var.L(lag). also rewrites equation expand lag expressions returns modified equations set unique lagged variables found.","code":""},{"path":"/reference/extract_lagged_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Lagged Variables from Equations — extract_lagged_vars","text":"","code":"extract_lagged_vars(equations, pattern)"},{"path":"/reference/extract_lagged_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Lagged Variables from Equations — extract_lagged_vars","text":"equations character vector equations strings. pattern list defining regex pattern capture positions variable name lag specification. Must contain elements regex, var_pos, lag_spec_pos.","code":""},{"path":"/reference/extract_lagged_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Lagged Variables from Equations — extract_lagged_vars","text":"list two elements: variables Character vector unique lagged variables extracted. equations Character vector transformed equations.","code":""},{"path":"/reference/fill_ragged_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Ragged Edges in Time Series Data — fill_ragged_edge","title":"Fill Ragged Edges in Time Series Data — fill_ragged_edge","text":"function fills ragged edges time series data set using system equations model. iteratively detects edges, estimates model, fills unobserved series using one-step ahead conditional forecast time series balanced.","code":""},{"path":"/reference/fill_ragged_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Ragged Edges in Time Series Data — fill_ragged_edge","text":"","code":"fill_ragged_edge(ts_data, sys_eq, exogenous_variables, dates, point_forecast)"},{"path":"/reference/fill_ragged_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Ragged Edges in Time Series Data — fill_ragged_edge","text":"ts_data Time-series data set estimation. sys_eq koma_seq object (system_of_equations) containing details system equations used model. exogenous_variables character vector exogenous variables. dates Key-value list date ranges various model operations. point_forecast list contains following elements: active: Determines type forecast generated. TRUE, point forecast created. FALSE, density forecast returned. Default TRUE. central_tendency: character string indicating central tendency measure (\"mean\" \"median\") use summary statistics. Default \"mean\".","code":""},{"path":"/reference/fill_ragged_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill Ragged Edges in Time Series Data — fill_ragged_edge","text":"list containing updated time series data.","code":""},{"path":"/reference/find_extremas.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Extrema Values for Growth Rates and Levels — find_extremas","title":"Find Extrema Values for Growth Rates and Levels — find_extremas","text":"Computes minimum maximum values growth rates levels given data frame, adjusting values certain percentage provide margin. function useful determining range y-axis values plotting functions.","code":""},{"path":"/reference/find_extremas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Extrema Values for Growth Rates and Levels — find_extremas","text":"","code":"find_extremas(df_long)"},{"path":"/reference/find_extremas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Extrema Values for Growth Rates and Levels — find_extremas","text":"df_long data frame long format includes 'data_type' column, contain types 'growth' 'level' categorizing data.","code":""},{"path":"/reference/find_extremas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Extrema Values for Growth Rates and Levels — find_extremas","text":"list two elements 'growth' 'level', containing 'min' 'max' sub-element. represent adjusted minimum maximum values growth rates levels, respectively.","code":""},{"path":"/reference/forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast the Simultaneous Equations Model (SEM) — forecast","title":"Forecast the Simultaneous Equations Model (SEM) — forecast","text":"function produces forecasts SEM.","code":""},{"path":"/reference/forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast the Simultaneous Equations Model (SEM) — forecast","text":"","code":"forecast(estimates, dates, ..., restrictions = NULL, point_forecast = NULL)"},{"path":"/reference/forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast the Simultaneous Equations Model (SEM) — forecast","text":"estimates koma_estimate object (estimate) containing estimates simultaneous equations model, well list time series koma_seq object (system_of_equations) used estimation. dates Key-value list date ranges various model operations. ... Additional parameters. restrictions List model constraints. Default empty. point_forecast list contains following elements: active: Determines type forecast generated. TRUE, point forecast created. FALSE, density forecast returned. Default TRUE. central_tendency: character string indicating central tendency measure (\"mean\" \"median\") use summary statistics. Default \"mean\".","code":""},{"path":"/reference/forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast the Simultaneous Equations Model (SEM) — forecast","text":"object class koma_forecast. object class koma_forecast list containing following elements: mean Mean point forecasts list time series class koma_ts. median Median point forecasts list time series class koma_ts. quantiles list quantiles, element named according quantile (e.g., \"5\", \"50\", \"95\"), contains forecasts quantile. element NULL quantiles = FALSE. ts_data Time-series data set used forecasting. y_matrix Y matrix constructed balanced data current quarter, used forecasting. x_matrix X matrix used forecasting.","code":""},{"path":"/reference/forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forecast the Simultaneous Equations Model (SEM) — forecast","text":"forecast function SEM uses estimates koma_estimate object produce point forecasts quantile forecasts based point_forecast parameter. point_forecast$active TRUE, point forecasts generated. FALSE, quantile forecasts generated included quantiles list. Use summary function print summary forecast results. plot function can used visualize forecasts prediction intervals.","code":""},{"path":"/reference/forecast.html","id":"parallel","dir":"Reference","previous_headings":"","what":"Parallel","title":"Forecast the Simultaneous Equations Model (SEM) — forecast","text":"function provides option parallel computing future::plan() function. detailed example executing estimate parallel, see vignette: vignette(\"parallel\"). details, see future package documentation.","code":""},{"path":[]},{"path":"/reference/forecast_sem.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Forecasts for a System of Equations — forecast_sem","title":"Generate Forecasts for a System of Equations — forecast_sem","text":"function performs forecasting based provided system equations, estimates, parameters. supports density point forecasting.","code":""},{"path":"/reference/forecast_sem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Forecasts for a System of Equations — forecast_sem","text":"","code":"forecast_sem(   sys_eq,   estimates,   restrictions,   y_matrix,   forecast_x_matrix,   horizon,   freq,   forecast_dates,   point_forecast )"},{"path":"/reference/forecast_sem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Forecasts for a System of Equations — forecast_sem","text":"sys_eq koma_seq object (system_of_equations) containing details system equations used model. estimates List parameter estimates system. restrictions List model constraints. Default empty. y_matrix Matrix dependent variable time series data. forecast_x_matrix matrix forecasting data exogenous variables. horizon Forecasting horizon, specifying number periods. freq Frequency time series data. forecast_dates List containing 'start' 'end' dates forecast. point_forecast list contains following elements: active: Determines type forecast generated. TRUE, point forecast created. FALSE, density forecast returned. Default TRUE. central_tendency: character string indicating central tendency measure (\"mean\" \"median\") use summary statistics. Default \"mean\".","code":""},{"path":"/reference/forecast_sem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Forecasts for a System of Equations — forecast_sem","text":"list containing forecast values.","code":""},{"path":"/reference/forecast_single_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Forecast for a Single Draw — forecast_single_draw","title":"Generate a Forecast for a Single Draw — forecast_single_draw","text":"function computes forecast single draw parameter estimates, supporting point forecasts (mean median) density forecasts. constructs posterior distribution, companion matrix, reduced-form representation system computing forecasts.","code":""},{"path":"/reference/forecast_single_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Forecast for a Single Draw — forecast_single_draw","text":"","code":"forecast_single_draw(   sys_eq,   estimates,   jx,   y_matrix,   forecast_x_matrix,   horizon,   freq,   forecast_dates,   restrictions,   state,   central_tendency = NULL )"},{"path":"/reference/forecast_single_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Forecast for a Single Draw — forecast_single_draw","text":"sys_eq koma_seq object (system_of_equations) containing details system equations used model. estimates List parameter estimates system. y_matrix Matrix dependent variable time series data. forecast_x_matrix matrix forecasting data exogenous variables. horizon Forecasting horizon, specifying number periods. freq Frequency time series data. forecast_dates List containing 'start' 'end' dates forecast. restrictions List model constraints. Default empty. state environment used share mutable state function calls, particularly issuing warnings forecasting process.","code":""},{"path":"/reference/format.koma_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Format System of Equations — format.koma_seq","title":"Format System of Equations — format.koma_seq","text":"function formats object class koma_seq better readability. formats equations ensure proper spacing around operators aligns equations cleaner display.","code":""},{"path":"/reference/format.koma_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format System of Equations — format.koma_seq","text":"","code":"# S3 method for class 'koma_seq' format(x, ...)"},{"path":"/reference/format.koma_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format System of Equations — format.koma_seq","text":"x object class koma_seq. ... Additional arguments passed methods.","code":""},{"path":"/reference/format.koma_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format System of Equations — format.koma_seq","text":"character vector formatted equations.","code":""},{"path":"/reference/gamma_vectorization.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorize Gamma Matrix — gamma_vectorization","title":"Vectorize Gamma Matrix — gamma_vectorization","text":"Converts character representation gamma matrix transformation matrix constant vector, vector = transformation_matrix %*% parameters + constant_vector vector = vec(character_gamma_matrix).","code":""},{"path":"/reference/gamma_vectorization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorize Gamma Matrix — gamma_vectorization","text":"","code":"gamma_vectorization(character_gamma_matrix, identity_weights)"},{"path":"/reference/gamma_vectorization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorize Gamma Matrix — gamma_vectorization","text":"character_gamma_matrix character matrix representing gamma structure model. identity_weights list identity weights adjusting constant vectors.","code":""},{"path":"/reference/gamma_vectorization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorize Gamma Matrix — gamma_vectorization","text":"list three elements: transformation_matrix numeric matrix used parameter transformation. parameters character vector parameter names. constant_vector numeric vector constant terms.","code":""},{"path":"/reference/generate_sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Data for the Simultaneous Equations Model — generate_sample_data","title":"Generate Data for the Simultaneous Equations Model — generate_sample_data","text":"Compute Y X matrix (data) Use reduced form model compute Y \\(Y = X B \\Gamma^{-1} + U \\Gamma^{-1}\\)","code":""},{"path":"/reference/generate_sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Data for the Simultaneous Equations Model — generate_sample_data","text":"","code":"generate_sample_data(   sample_size,   sample_start,   burnin,   gamma_matrix,   beta_matrix,   sigma_matrix,   endogenous_variables,   exogenous_variables,   predetermined_variables )"},{"path":"/reference/generate_sample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Data for the Simultaneous Equations Model — generate_sample_data","text":"sample_size number observations. sample_start vector format c(YEAR, QUARTER) representing burnin number observations discard mitigate dependency starting values. gamma_matrix matrix defines relationships variables. beta_matrix matrix defines coefficients equation. sigma_matrix matrix defines standard deviation error terms. endogenous_variables vector endogenous variables. exogenous_variables vector exogenous variables. predetermined_variables vector predetermined variables.","code":""},{"path":"/reference/generate_sample_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Data for the Simultaneous Equations Model — generate_sample_data","text":"list containing three elements: y_matrix: dependent variable matrix newly generated data. x_matrix: matrix exogenous predetermined variables newly generated data. ts_data: list containing time series growth rates.","code":""},{"path":"/reference/generate_sample_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Data for the Simultaneous Equations Model — generate_sample_data","text":"creates sample data relationship variables determined defined parameters.","code":""},{"path":"/reference/get_central_tendency.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Central Tendency Value from a Named List — get_central_tendency","title":"Get Central Tendency Value from a Named List — get_central_tendency","text":"function takes named list quantiles string central_tendency indicating central tendency measure (mean median) retrieve.","code":""},{"path":"/reference/get_central_tendency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Central Tendency Value from a Named List — get_central_tendency","text":"","code":"get_central_tendency(central_tendency, quantiles)"},{"path":"/reference/get_central_tendency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Central Tendency Value from a Named List — get_central_tendency","text":"central_tendency string, either \"mean\" \"median\". quantiles named list containing central tendency values.","code":""},{"path":"/reference/get_central_tendency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Central Tendency Value from a Named List — get_central_tendency","text":"central tendency value list quantiles based central_tendency argument.","code":""},{"path":"/reference/get_default_gibbs_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Gibbs Specfications — get_default_gibbs_spec","title":"Default Gibbs Specfications — get_default_gibbs_spec","text":"Default Gibbs Specfications","code":""},{"path":"/reference/get_default_gibbs_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Gibbs Specfications — get_default_gibbs_spec","text":"","code":"get_default_gibbs_spec()"},{"path":"/reference/get_default_gibbs_spec.html","id":"gibbs-sampler-specifications","dir":"Reference","previous_headings":"","what":"Gibbs Sampler Specifications","title":"Default Gibbs Specfications — get_default_gibbs_spec","text":"ndraws: Integer specifying number Gibbs sampler draws. Default 2000. burnin_ratio: Numeric specifying ratio burn-period. Default 0.5. nstore: Integer specifying frequency stored draws. Default 1. tau: Numeric tuning parameter enforcing acceptance rate. Default 1.1.","code":""},{"path":"/reference/get_endogenous_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get endogenous variables from a system of equations — get_endogenous_variables","title":"Get endogenous variables from a system of equations — get_endogenous_variables","text":"function takes system equations returns endogenous variables.","code":""},{"path":"/reference/get_endogenous_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get endogenous variables from a system of equations — get_endogenous_variables","text":"","code":"get_endogenous_variables(equations)"},{"path":"/reference/get_endogenous_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get endogenous variables from a system of equations — get_endogenous_variables","text":"equations character string containing system equations, equations separated commas.","code":""},{"path":"/reference/get_endogenous_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get endogenous variables from a system of equations — get_endogenous_variables","text":"character vector endogenous variables.","code":""},{"path":"/reference/get_identities.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract identities from equations — get_identities","title":"Extract identities from equations — get_identities","text":"function filters equations containing 'epsilon', extracts weights identities based character_gamma_matrix character_beta_matrix.","code":""},{"path":"/reference/get_identities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract identities from equations — get_identities","text":"","code":"get_identities(equations, character_gamma_matrix, character_beta_matrix)"},{"path":"/reference/get_identities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract identities from equations — get_identities","text":"equations character string containing system equations, equations separated commas. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations, potential entries like \"theta\", used weights extraction process. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations, potential entries like \"theta\", used weights extraction process. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations.","code":""},{"path":"/reference/get_identities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract identities from equations — get_identities","text":"list identities extracted input equations. entry contains: equation: raw equation components: components extracted equation weights: corresponding weights component","code":""},{"path":"/reference/get_lagged_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Lagged Values from Y Matrix — get_lagged_values","title":"Extract Lagged Values from Y Matrix — get_lagged_values","text":"function populates matrix containing predetermined variables, .e. lagged variables, lagged values contained Y matrix.","code":""},{"path":"/reference/get_lagged_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Lagged Values from Y Matrix — get_lagged_values","text":"","code":"get_lagged_values(predetermined_matrix, y_matrix, tx)"},{"path":"/reference/get_lagged_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Lagged Values from Y Matrix — get_lagged_values","text":"predetermined_matrix predetermined matrix populated lagged values. y_matrix y matrix containing original values. tx time index lagged values obtained.","code":""},{"path":"/reference/get_lagged_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Lagged Values from Y Matrix — get_lagged_values","text":"updated predetermined matrix lagged values.","code":""},{"path":"/reference/get_max_lag.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the maximum lag of variables — get_max_lag","title":"Determine the maximum lag of variables — get_max_lag","text":"function calculates maximum lag among set variables.","code":""},{"path":"/reference/get_max_lag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the maximum lag of variables — get_max_lag","text":"","code":"get_max_lag(variable_names)"},{"path":"/reference/get_max_lag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the maximum lag of variables — get_max_lag","text":"variable_names character vector specifying names variables analyze.","code":""},{"path":"/reference/get_max_lag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the maximum lag of variables — get_max_lag","text":"maximum lag among variables. lags detected NA returned.","code":""},{"path":"/reference/get_optimal_ticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Optimal Ticks for y Axis — get_optimal_ticks","title":"Find Optimal Ticks for y Axis — get_optimal_ticks","text":"Find Optimal Ticks y Axis","code":""},{"path":"/reference/get_optimal_ticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Optimal Ticks for y Axis — get_optimal_ticks","text":"","code":"get_optimal_ticks(df_long, x_range)"},{"path":"/reference/get_optimal_ticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Optimal Ticks for y Axis — get_optimal_ticks","text":"df_long data frame long format includes 'data_type' column, contain types 'growth' 'level' categorizing data. x_range list x-axis range start end values format c(YEAR, QUARTER).","code":""},{"path":"/reference/get_optimal_ticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Optimal Ticks for y Axis — get_optimal_ticks","text":"list y1 (growth) values text, y2 (level) text extremas.","code":""},{"path":"/reference/get_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameter Names from Character Matrix — get_parameters","title":"Get Parameter Names from Character Matrix — get_parameters","text":"Extracts unique parameter names character matrix based given pattern (\"gamma\" \"beta\").","code":""},{"path":"/reference/get_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameter Names from Character Matrix — get_parameters","text":"","code":"get_parameters(character_matrix, pattern)"},{"path":"/reference/get_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameter Names from Character Matrix — get_parameters","text":"character_matrix character matrix extract parameters . pattern string pattern identify parameter names.","code":""},{"path":"/reference/get_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameter Names from Character Matrix — get_parameters","text":"character vector unique parameter names matching pattern.","code":""},{"path":"/reference/get_seq_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Get System of Equations Weights — get_seq_weights","title":"Get System of Equations Weights — get_seq_weights","text":"Calculates dynamic weights system equations updates identities weights. function processes list time series data (ts_data), list identities (identities), set dates (dates) compute update weights dynamically.","code":""},{"path":"/reference/get_seq_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get System of Equations Weights — get_seq_weights","text":"","code":"get_seq_weights(ts_data, identities, dates)"},{"path":"/reference/get_seq_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get System of Equations Weights — get_seq_weights","text":"ts_data named list stats::ts objects. list contain time series data aggregate values components. identities named list identities, containing components respective weights. list include elements \"lhs_weight\" names. dates list start end dates dynamic weight calculations. dates list sub-list dynamic_weights start end entries, numeric representation date, format produced dates_to_num.","code":""},{"path":"/reference/get_seq_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get System of Equations Weights — get_seq_weights","text":"function updates identities list calculated dynamic weights returns nothing explicitly.","code":""},{"path":"/reference/get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Variables from a System of Equations — get_variables","title":"Extract Variables from a System of Equations — get_variables","text":"function identifies extracts variable names set equations. removes whitespace splits equations common operators ~, ==, +, *, -. filters components represent numeric values, returning variable names.","code":""},{"path":"/reference/get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Variables from a System of Equations — get_variables","text":"","code":"get_variables(equations)"},{"path":"/reference/get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Variables from a System of Equations — get_variables","text":"equations character vector containing equations extract variables .","code":""},{"path":"/reference/get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Variables from a System of Equations — get_variables","text":"list character vectors, vector contains variables single equation.","code":""},{"path":"/reference/get_weight_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Weight Names from Equations — get_weight_variables","title":"Extract Weight Names from Equations — get_weight_variables","text":"function takes vector equations extracts names variables appear within parentheses.","code":""},{"path":"/reference/get_weight_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Weight Names from Equations — get_weight_variables","text":"","code":"get_weight_variables(equations)"},{"path":"/reference/get_weight_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Weight Names from Equations — get_weight_variables","text":"equations character string vector containing system equations. single string, equations separated commas.","code":""},{"path":"/reference/get_weight_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Weight Names from Equations — get_weight_variables","text":"character vector unique weight names appeared within parentheses input equations.","code":""},{"path":"/reference/get_weights_and_comps.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Component Weights from an Equation — get_weights_and_comps","title":"Extract Component Weights from an Equation — get_weights_and_comps","text":"Given mathematical equation, function identifies individual components associated weights. components paired numeric value via *, numeric value considered weight. Otherwise, weight set NULL.","code":""},{"path":"/reference/get_weights_and_comps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Component Weights from an Equation — get_weights_and_comps","text":"","code":"get_weights_and_comps(raw_eq, weights_list)"},{"path":"/reference/get_weights_and_comps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Component Weights from an Equation — get_weights_and_comps","text":"raw_eq character string mathematical equation. equation expected format like \"lhs == rhs\", right-hand side (rhs) might contain components combined using '+' '-'. weights_list pre-constructed list containing character representations weights derived character_gamma_matrix character_beta_matrix.","code":""},{"path":"/reference/get_weights_and_comps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Component Weights from an Equation — get_weights_and_comps","text":"list following elements: equation: original equation provided input. components: list components extracted rhs equation. weights: list weights, corresponding component. component explicit weight equation, weight NULL.","code":""},{"path":[]},{"path":"/reference/get_x_ticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Tick Text and Values for a Plot — get_x_ticks","title":"Generate Tick Text and Values for a Plot — get_x_ticks","text":"function generates tick text values based provided data frame optional existing plot figure. tick text values specifically structured showcasing annual growth rates timeline.","code":""},{"path":"/reference/get_x_ticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Tick Text and Values for a Plot — get_x_ticks","text":"","code":"get_x_ticks(df_long, fig = NULL)"},{"path":"/reference/get_x_ticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Tick Text and Values for a Plot — get_x_ticks","text":"df_long data frame long format, containing least columns data_type, color_code, value, dates. data frame row date data type, along corresponding value color code. fig optional existing plotly figure object new ticks added. provided, function integrate new tick text values existing ticks figure. Default NULL, indicating existing figure.","code":""},{"path":"/reference/get_x_ticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Tick Text and Values for a Plot — get_x_ticks","text":"list containing two elements: ticktext tickvals. ticktext element character vector HTML formatted strings tick, showcasing year annual growth rate. tickvals element integer vector years corresponding tick.","code":""},{"path":"/reference/get_y_position_for_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Y Position for Annotations in a Figure — get_y_position_for_annotations","title":"Get Y Position for Annotations in a Figure — get_y_position_for_annotations","text":"Calculates y-axis position next annotation added figure based number existing annotations. function automates adjustment y-axis position annotations, ensuring placed without overlap starting base y position modifying according current count annotations within figure.","code":""},{"path":"/reference/get_y_position_for_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Y Position for Annotations in a Figure — get_y_position_for_annotations","text":"","code":"get_y_position_for_annotations(fig)"},{"path":"/reference/get_y_position_for_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Y Position for Annotations in a Figure — get_y_position_for_annotations","text":"fig figure object potentially contains annotations within layout attributes. figure object adhere expected structure, including list layout attributes accessible via $x$layoutAttrs, element may may contain annotations list.","code":""},{"path":"/reference/get_y_position_for_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Y Position for Annotations in a Figure — get_y_position_for_annotations","text":"Numeric value indicating y-axis position placing next annotation. position calculated based predefined base position, adjustments made existing annotation prevent overlap.","code":""},{"path":"/reference/get_y_ticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Y-Axis Tick Marks for Multiple Axes in Plotly — get_y_ticks","title":"Calculate Y-Axis Tick Marks for Multiple Axes in Plotly — get_y_ticks","text":"function computes tick marks y-axes Plotly graph, ensuring gridlines align across multiple y-axes matching dtick ratios. adjusts maximum range axes based ratios align gridlines correctly.","code":""},{"path":"/reference/get_y_ticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Y-Axis Tick Marks for Multiple Axes in Plotly — get_y_ticks","text":"","code":"get_y_ticks(extremas, num_ticks, center_around)"},{"path":"/reference/get_y_ticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Y-Axis Tick Marks for Multiple Axes in Plotly — get_y_ticks","text":"extremas list 'min' 'max' values y-axis. num_ticks desired number ticks y-axis. center_around numeric value center axis ranges.","code":""},{"path":"/reference/get_y_ticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Y-Axis Tick Marks for Multiple Axes in Plotly — get_y_ticks","text":"list dtick, min, max y-axis, adjusted alignment.","code":""},{"path":"/reference/get_y_ticks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Y-Axis Tick Marks for Multiple Axes in Plotly — get_y_ticks","text":"function calculates tick mark spacing (dtick) ratios, adjusts axis ranges match largest dtick ratio, ensuring gridlines align across axes. avoids reducing axis range maximum prevent cutting data points.","code":""},{"path":"/reference/get_y_ticks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Y-Axis Tick Marks for Multiple Axes in Plotly — get_y_ticks","text":"Adapted methodology outlined Victor Bezak GitHub repository: https://github.com/VictorBezak/Plotly_Multi-Axes_Gridlines","code":""},{"path":"/reference/init_koma_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate Default Theme — init_koma_theme","title":"Initiate Default Theme — init_koma_theme","text":"Initiate default theme used plot forecasts.","code":""},{"path":"/reference/init_koma_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate Default Theme — init_koma_theme","text":"","code":"init_koma_theme(   index = list(start = NULL, end = NULL),   title = list(font = NULL, text = NULL),   font = NULL,   trace_name = NULL,   xaxis = list(tickfont = NULL, range = list(start = NULL, end = NULL)),   yaxis = list(y = list(title = list(text = \"QoQ, in %\"), tick_center = 0), y2 =     list(title = list(text = \"Level\"), tick_center = 100), tickfont = NULL, number_ticks     = 5),   legend = list(font = NULL),   color = list(marker = list(in_sample = \"rgba(111,111,111,0.6)\", forecast =     \"rgba(33,92,175,1)\"), bar_textfont = list(in_sample = \"black\", forecast = \"white\")) )"},{"path":"/reference/init_koma_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate Default Theme — init_koma_theme","text":"index Optional list two elements: start end. dates used anchor time series data. Dates format: c(YEAR, QUARTER). title list specify title options. Default NULL. text: Sets plot's title. provided, variable name displayed. font: Sets plot title font. font Sets global font. Note fonts used traces layout components inherit global font. trace_name Optional list specify naming traces. provided, names generated based start date forecasts. instance, forecast starts 2023-Q1, default name in_sample_growth \"2023-Q1 Data (Growth Rate)\", similarly traces. list can four elements: in_sample_growth: Naming -sample growth data traces. in_sample_level: Naming -sample level data traces. forecast_growth: Naming forecast growth data traces. forecast_level: Naming forecast level data traces. xaxis list custom labels x-axis. range: Sets range axis. List start end. tickfont: Sets axis' tick font, including tickfont annual growth rates. yaxis list custom labels y-axes y (left) y2 (right). y: list custom labels y-axis. title: Label left y-axis, defaults \"QoQ, %\" (quarter quarter). tick_center: Value center ticks around, defaults 0. y2: list custom labels y-axis. title: Label left y-axis, defaults \"Level\". tick_center: Value center ticks around, defaults 100. tickfont: Sets axis' tick font. number_ticks: Integer desired number ticks y-axis. legend list specify legend options. font: Sets legend font. color list containing color options different elements plot. working RGBA colors, alpha value ('' RGBA) determines transparency color, ranging 0 (fully transparent) 1 (fully opaque). marker: list specifying colors different traces. in_sample: Color -sample data traces. forecast: Color forecast traces. bar_textfont: list specifying text color different bars. in_sample: Text color -sample data bars. forecast: Text color forecast data bars.","code":""},{"path":"/reference/initial_omega_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute initial omega for the jth equation — initial_omega_j","title":"Compute initial omega for the jth equation — initial_omega_j","text":"initial_omega_j computes OLS quantity initial omega_j using initialized gamma_j'","code":""},{"path":"/reference/initial_omega_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute initial omega for the jth equation — initial_omega_j","text":"","code":"initial_omega_j(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_jw )"},{"path":"/reference/initial_omega_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute initial omega for the jth equation — initial_omega_j","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_jw \\((n_j \\times 1)\\) vector parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/initial_omega_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute initial omega for the jth equation — initial_omega_j","text":"function returns evaluation target function, used decide whether accept reject proposed states MH algorithm. Returns NA gamma parameters.","code":""},{"path":"/reference/initialize_sampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the sampler — initialize_sampler","title":"Initialize the sampler — initialize_sampler","text":"initialize_sampler initializes sampler Metropolis Hastings algorithm. obtains initial \\(gamma\\) parameters numerically maximizing target function. calculates Cholesky factor \\(L\\) inverse Hessian \\(M^{-1}\\) target function. Cholesky factor, along gamma parameter equation \\(j\\), returned. Cholesky factor used draw candidate gamma MH algorithm.","code":""},{"path":"/reference/initialize_sampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the sampler — initialize_sampler","text":"","code":"initialize_sampler(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx )"},{"path":"/reference/initialize_sampler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the sampler — initialize_sampler","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\).","code":""},{"path":"/reference/initialize_sampler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize the sampler — initialize_sampler","text":"list containing initial parameters gamma (gamma_parameters_j) Cholesky factor inverse Hessian (cholesky_of_inverse_hessian) number_endogenous_in_j greater 0. , gamma_parameters_j parameter returned 0.","code":""},{"path":"/reference/initialize_sampler_informative.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize the sampler — initialize_sampler_informative","title":"Initialize the sampler — initialize_sampler_informative","text":"initialize_sampler_informative initializes sampler Metropolis-Hastings algorithm. obtains initial \\(gamma\\) parameters numerically maximizing target function. calculates Cholesky factor \\(L\\) inverse Hessian \\(M^{-1}\\) target function. Cholesky factor, along gamma parameter equation \\(j\\), returned. Cholesky factor used draw candidate gamma MH algorithm.","code":""},{"path":"/reference/initialize_sampler_informative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize the sampler — initialize_sampler_informative","text":"","code":"initialize_sampler_informative(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx )"},{"path":"/reference/initialize_sampler_informative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize the sampler — initialize_sampler_informative","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\).","code":""},{"path":"/reference/initialize_sampler_informative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize the sampler — initialize_sampler_informative","text":"list containing initial parameters gamma (gamma_jw) Cholesky factor inverse Hessian (cholesky_of_inverse_hessian) number_endogenous_in_j greater 0. , gamma_jw parameter returned 0.","code":""},{"path":"/reference/is_system_of_equations.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Object is a System of Equations — is_system_of_equations","title":"Check if Object is a System of Equations — is_system_of_equations","text":"function checks given object inherits class koma_seq, indicating represents system equations.","code":""},{"path":"/reference/is_system_of_equations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Object is a System of Equations — is_system_of_equations","text":"","code":"is_system_of_equations(x)"},{"path":"/reference/is_system_of_equations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Object is a System of Equations — is_system_of_equations","text":"x object checked.","code":""},{"path":"/reference/is_system_of_equations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Object is a System of Equations — is_system_of_equations","text":"Logical. Returns TRUE object inherits class koma_seq, FALSE otherwise.","code":""},{"path":"/reference/iterate_n_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Periods to Numeric Date Representation — iterate_n_periods","title":"Add Periods to Numeric Date Representation — iterate_n_periods","text":"function iterates numeric date representation given number periods (e.g., years, quarters months). accepts date either vector format (year, period) numeric representation adds specified number periods .","code":""},{"path":"/reference/iterate_n_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Periods to Numeric Date Representation — iterate_n_periods","text":"","code":"iterate_n_periods(x, n, frequency)"},{"path":"/reference/iterate_n_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Periods to Numeric Date Representation — iterate_n_periods","text":"x numeric value 2-element vector (year, period). vector represent year period (e.g., quarter month). n number periods add. can positive negative. frequency numeric value indicating number periods year (e.g., 1, years, 4 quarters, 12 months).","code":""},{"path":"/reference/iterate_n_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Periods to Numeric Date Representation — iterate_n_periods","text":"numeric representation date adding periods.","code":""},{"path":"/reference/klein.html","id":null,"dir":"Reference","previous_headings":"","what":"Klein macroeconomic time series (1970 Q1 onward) — klein","title":"Klein macroeconomic time series (1970 Q1 onward) — klein","text":"list U.S. macro series FRED (14 quarterly series).","code":""},{"path":"/reference/klein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Klein macroeconomic time series (1970 Q1 onward) — klein","text":"","code":"klein"},{"path":"/reference/klein.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Klein macroeconomic time series (1970 Q1 onward) — klein","text":"list 14 ts objects: gdp Real GDP (bil. 2017 USD, SAAR; FRED: GDPC1) consumption Real PCE (bil. 2017 USD, SAAR; FRED: PCECC96) investment Real private investment (bil. 2017 USD, SAAR; FRED: GPDIC1) government Real government spending (bil. 2017 USD, SAAR; FRED: GCEC1) net_exports Real net exports (bil. 2017 USD, SAAR; FRED: NETEXC) n_gdp Nominal GDP (bil. USD, SAAR; FRED: GDP) n_consumption Nominal PCE (bil. USD, SAAR; FRED: PCEC) n_investment Nominal private investment (bil. USD, SAAR; FRED: GPDI) n_government Nominal government spending (bil. USD, SAAR; FRED: GCE) n_profits Nominal profits tax (bil. USD, SAAR; FRED: CP) n_wages Nominal private wages & salaries (bil. USD; FRED: A132RC1Q027SBEA) n_government_wages Nominal government wages & salaries (bil. USD; FRED: B202RC1Q027SBEA) n_taxes Nominal fed tax receipts (bil. USD; FRED: W007RC1Q027SBEA) gdp_deflator GDP implicit price deflator (2017=100, SAAR; FRED: GDPDEF)","code":""},{"path":"/reference/klein.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Klein macroeconomic time series (1970 Q1 onward) — klein","text":"https://fred.stlouisfed.org/","code":""},{"path":"/reference/koma_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Extended Time-Series Object — koma_ts","title":"Extended Time-Series Object — koma_ts","text":"function ets used create extended time-series (ets) object. additional attribute passed saved ets. as_ets is_ets coerce object time- series test whether object time series class koma_ts.","code":""},{"path":"/reference/koma_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extended Time-Series Object — koma_ts","text":"","code":"ets(   data = NA,   start = NULL,   end = NULL,   frequency = NULL,   deltat = NULL,   ts.eps = getOption(\"ts.eps\"),   ... )  as_ets(x = stats::ts(), ...)  is_ets(x)"},{"path":"/reference/koma_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extended Time-Series Object — koma_ts","text":"data vector matrix observed time-series     values. data frame coerced numeric matrix via     data.matrix.  (See also ‘Details’.) start time first observation.  Either single     number vector two numbers (second integer),     specify natural time     unit (1-based) number samples time unit.  See     examples use second form. end time last observation, specified way     start. frequency number observations per unit time. deltat fraction sampling period successive     observations; e.g., 1/12 monthly data.  one     frequency deltat provided. ts.eps time series comparison tolerance.  Frequencies     considered equal absolute difference less     ts.eps. ... Additional attributes. x object coerced / checked.","code":""},{"path":"/reference/koma_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extended Time-Series Object — koma_ts","text":"koma_ts object. koma_ts object. TRUE object class koma_ts, otherwise FALSE.","code":""},{"path":[]},{"path":"/reference/level.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the level for a time series — level","title":"Compute the level for a time series — level","text":"Required attributes input time series : series_type - \"rate\" \"level\" method - \"percentage\", \"diff_log\", \"none\", expression","code":""},{"path":"/reference/level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the level for a time series — level","text":"","code":"level(x, ...)"},{"path":"/reference/level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the level for a time series — level","text":"x time series object. Supported classes ts ets (subclass ts). ... arguments passed methods (unused default method).","code":""},{"path":"/reference/level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the level for a time series — level","text":"ets object.","code":""},{"path":"/reference/level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the level for a time series — level","text":"","code":"x <- ets(c(0.3, 0.1, 0.2, -0.1), series_type = \"rate\", method = \"percentage\") level(x) #> level, percentage #> Time Series: #> Start = 0  #> End = 4  #> Frequency = 1  #> [1] 100.0000 100.3000 100.4003 100.6011 100.5005"},{"path":"/reference/model_evaluation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Out-of-Sample RMSE for a Specified Horizon — model_evaluation","title":"Calculate Out-of-Sample RMSE for a Specified Horizon — model_evaluation","text":"Computes Root Mean Square Error (RMSE) model given prediction horizon, incrementing -sample data quarter calculation specified horizon equals end date forecast period.","code":""},{"path":"/reference/model_evaluation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Out-of-Sample RMSE for a Specified Horizon — model_evaluation","text":"","code":"model_evaluation(   sys_eq,   variables,   horizon,   ts_data,   dates,   ...,   evaluate_on_levels = TRUE,   options = NULL,   point_forecast = NULL,   restrictions = NULL )"},{"path":"/reference/model_evaluation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Out-of-Sample RMSE for a Specified Horizon — model_evaluation","text":"sys_eq koma_seq object (system_of_equations) containing details system equations used model. variables character vector name(s) stochastic endogenous variable forecast error(s) calculated. NULL calculated variables. horizon forecast horizon quarters RMSE calculated. ts_data time series data set, must include data end date forecasting period. dates Key-value list date ranges various model operations. ... Additional parameters. evaluate_on_levels Boolean, TRUE RMSE calculated levels FALSE growth rates. options Optional settings modifying Gibbs sampler specifications equations. See Gibbs Sampler Specifications. point_forecast list contains following elements: active: Determines type forecast generated. TRUE, point forecast created. FALSE, density forecast returned. Default TRUE. central_tendency: character string indicating central tendency measure (\"mean\" \"median\") use summary statistics. Default \"mean\". restrictions List model constraints. Default empty.","code":""},{"path":"/reference/model_evaluation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Out-of-Sample RMSE for a Specified Horizon — model_evaluation","text":"DataFrame containing RMSE selected Variables desired horizon.","code":""},{"path":"/reference/model_evaluation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Out-of-Sample RMSE for a Specified Horizon — model_evaluation","text":"function initiates RMSE calculation dates$forecast$start continues dates$forecast$start + horizon equals dates$forecast$end. iteration, quarter added -sample data dates$forecast$start.","code":""},{"path":"/reference/model_identification.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Model Parameters from Character Matrices — model_identification","title":"Identify Model Parameters from Character Matrices — model_identification","text":"function calculates gamma beta matrices based given character gamma beta matrices, along identity weights. checks identification stochastic equations verifies order rank conditions model identification.","code":""},{"path":"/reference/model_identification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Model Parameters from Character Matrices — model_identification","text":"","code":"model_identification(   character_gamma_matrix,   character_beta_matrix,   identity_weights,   call = rlang::caller_env() )"},{"path":"/reference/model_identification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Model Parameters from Character Matrices — model_identification","text":"character_gamma_matrix character matrix representing gamma structure model. character_beta_matrix character matrix representing beta structure model. identity_weights list identity weights help construct constant vectors. call environment error called. Defaults rlang::caller_env(), used provide context case error.","code":""},{"path":"/reference/model_identification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Model Parameters from Character Matrices — model_identification","text":"NULL. function used side effects, stopping execution model identification conditions met.","code":""},{"path":"/reference/multivariate_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a Multivariate Normal Distribution — multivariate_norm","title":"Simulate from a Multivariate Normal Distribution — multivariate_norm","text":"Produces one samples specified multivariate normal distribution.","code":""},{"path":"/reference/multivariate_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a Multivariate Normal Distribution — multivariate_norm","text":"","code":"multivariate_norm(n = 1, mu, sigma, tol = 1e-06, empirical = FALSE)"},{"path":"/reference/multivariate_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a Multivariate Normal Distribution — multivariate_norm","text":"n number samples required. mu vector giving means variables. sigma positive-definite symmetric matrix specifying covariance matrix variables. tol Tolerance (relative largest variance) numerical lack positive-definiteness sigma. empirical Logical. true, mu sigma specify empirical population mean covariance matrix.","code":""},{"path":"/reference/multivariate_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from a Multivariate Normal Distribution — multivariate_norm","text":"n = 1 vector length mu, otherwise n length(mu) matrix one sample row.","code":""},{"path":"/reference/multivariate_norm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from a Multivariate Normal Distribution — multivariate_norm","text":"matrix decomposition done vai eigen; although Choleski decomposition might faster, eigendecomposition stabler.","code":""},{"path":"/reference/multivariate_norm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate from a Multivariate Normal Distribution — multivariate_norm","text":"Venables, W. N. & Ripley, B. D. (2002) Modern Applied Statistics S.  Fourth Edition. Springer, New York. ISBN 0-387-95457-0","code":""},{"path":[]},{"path":"/reference/multivariate_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from a Multivariate Normal Distribution — multivariate_norm","text":"","code":"#' if (FALSE) { # \\dontrun{ sigma <- matrix(c(10, 3, 3, 2), 2, 2) sigma var(multivariate_norm(n = 1000, rep(0, 2), sigma)) var(multivariate_norm(n = 1000, rep(0, 2), sigma, empirical = TRUE)) } # }"},{"path":"/reference/multivariate_norm_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Multivariate Normal Density at x — multivariate_norm_pdf","title":"Evaluate Multivariate Normal Density at x — multivariate_norm_pdf","text":"Evaluate Multivariate Normal Density x","code":""},{"path":"/reference/multivariate_norm_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Multivariate Normal Density at x — multivariate_norm_pdf","text":"","code":"multivariate_norm_pdf(x, mu, sigma)"},{"path":"/reference/multivariate_norm_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Multivariate Normal Density at x — multivariate_norm_pdf","text":"x vector evaluate density. mu vector giving means variables. sigma positive-definite symmetric matrix specifying covariance matrix variables.","code":""},{"path":"/reference/multivariate_norm_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate Multivariate Normal Density at x — multivariate_norm_pdf","text":"density multivariate normal distribution x.","code":""},{"path":"/reference/num_to_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Numeric to Date Format — num_to_dates","title":"Convert Numeric to Date Format — num_to_dates","text":"function converts numeric representation date back vector list vectors year period (e.g., quarter month). function supports input single numeric value, list numeric values. numeric representation match format produced dates_to_num.","code":""},{"path":"/reference/num_to_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Numeric to Date Format — num_to_dates","text":"","code":"num_to_dates(x, frequency, ...)"},{"path":"/reference/num_to_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Numeric to Date Format — num_to_dates","text":"x numeric value list numeric values representing date(s). x single numeric value, format produced dates_to_num. frequency numeric value indicating number periods year (e.g., 1 years, 4 quarters, 12 months). ... Additional arguments passed methods.","code":""},{"path":"/reference/num_to_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Numeric to Date Format — num_to_dates","text":"numeric vector length 2 (year, period) list vectors.","code":""},{"path":"/reference/parse_lags.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Lagged Variables in Equation Strings — parse_lags","title":"Parse Lagged Variables in Equation Strings — parse_lags","text":"Identifies standardizes lagged variable references system equations. Supports var.L(lag) lag(var, lag) notation. function processes equation, detects lag patterns, rewrites unified form. returns modified equations list unique lagged variables.","code":""},{"path":"/reference/parse_lags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Lagged Variables in Equation Strings — parse_lags","text":"","code":"parse_lags(equations)"},{"path":"/reference/parse_lags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Lagged Variables in Equation Strings — parse_lags","text":"equations character vector equation strings.","code":""},{"path":"/reference/parse_lags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Lagged Variables in Equation Strings — parse_lags","text":"list components: variables sorted character vector unique lagged variables. equations character vector equations standardized lags.","code":""},{"path":"/reference/plot.koma_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot koma Forecasts — plot.koma_forecast","title":"Plot koma Forecasts — plot.koma_forecast","text":"Plot koma forecasts","code":""},{"path":"/reference/plot.koma_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot koma Forecasts — plot.koma_forecast","text":"","code":"# S3 method for class 'koma_forecast' plot(x, y = NULL, ...)"},{"path":"/reference/plot.koma_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot koma Forecasts — plot.koma_forecast","text":"x koma_forecast object (forecast). y Ignored. Included compatibility generic function. ... Additional parameters: variables vector variable names plot. fig Optional. Plotly figure object. Default NULL. theme Optional. theme plot. Default NULL. central_tendency Optional. string specifying type forecast print. Can \"mean\", \"median\", quantile name like \"q_5\", \"q_50\", \"q_95\". Default \"mean\" available, otherwise \"median\", specified quantile.","code":""},{"path":"/reference/plot.koma_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot koma Forecasts — plot.koma_forecast","text":"Plotly figure object displaying data.","code":""},{"path":"/reference/plotli.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Function — plotli","title":"Plotting Function — plotli","text":"function processes data creates plot using Plotly theme provided.","code":""},{"path":"/reference/plotli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Function — plotli","text":"","code":"plotli(df_long, fig = NULL, theme = NULL, ...)"},{"path":"/reference/plotli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Function — plotli","text":"df_long data frame long format, containing data plotted. fig Optional. Plotly figure object update, otherwise creates new one. theme List default plot output parameters. Defaults NULL, leads init_koma_theme called. Please see vignette details tweaking themes. ... Directly pass additional arguments plotly::layout. documentation, see https://plotly.com/r/reference/#Layout_and_layout_style_objects","code":""},{"path":"/reference/plotli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Function — plotli","text":"Plotly figure object displaying data specified formatting.","code":""},{"path":"/reference/plotli.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plotting Function — plotli","text":"https://plotly.com/r/reference/#Layout_and_layout_style_objects","code":""},{"path":"/reference/prepare_data_to_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data for Plotting — prepare_data_to_plot","title":"Prepare Data for Plotting — prepare_data_to_plot","text":"function prepares time series data converting data wide long format.","code":""},{"path":"/reference/prepare_data_to_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data for Plotting — prepare_data_to_plot","text":"","code":"prepare_data_to_plot(mts_list, start)"},{"path":"/reference/prepare_data_to_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data for Plotting — prepare_data_to_plot","text":"mts_list list named multivariate time series objects: growth, level / growth_annual. start numeric value representing forecast start date.","code":""},{"path":"/reference/prepare_data_to_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data for Plotting — prepare_data_to_plot","text":"single tibble long format combining growth rates, annualized growth rates, level data.","code":""},{"path":"/reference/print.koma_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for koma_forecast Objects — print.koma_forecast","title":"Print Method for koma_forecast Objects — print.koma_forecast","text":"function prints forecasts contained koma_forecast object multivariate time series (mts). Users can specify variables print select either mean forecast, median forecast, specific quantiles forecast distribution.","code":""},{"path":"/reference/print.koma_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for koma_forecast Objects — print.koma_forecast","text":"","code":"# S3 method for class 'koma_forecast' print(x, ..., variables = NULL, central_tendency = NULL)"},{"path":"/reference/print.koma_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for koma_forecast Objects — print.koma_forecast","text":"x koma_forecast object. ... Additional parameters. variables Optional. character vector variable names print. Default NULL, prints forecasted variables. central_tendency Optional. string specifying type forecast print. Can \"mean\", \"median\", quantile name like \"q_5\", \"q_50\", \"q_95\". Default \"mean\" available, otherwise \"median\", specified quantile.","code":""},{"path":"/reference/print.koma_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Method for koma_forecast Objects — print.koma_forecast","text":"function prints forecasts contained koma_forecast object. Users can choose print either mean forecast, median forecast, specific quantiles forecast distribution. variables specified, forecasts variables printed. central_tendency specified, function defaults printing mean forecast available, otherwise median forecast, specified quantile.","code":""},{"path":"/reference/print.koma_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Print System of Equations — print.koma_seq","title":"Print System of Equations — print.koma_seq","text":"function prints object class koma_seq ensure equations displayed readable format.","code":""},{"path":"/reference/print.koma_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print System of Equations — print.koma_seq","text":"","code":"# S3 method for class 'koma_seq' print(x, ...)"},{"path":"/reference/print.koma_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print System of Equations — print.koma_seq","text":"x object class koma_seq. ... Additional arguments passed methods.","code":""},{"path":"/reference/print_gibbs_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Current Gibbs Sampler Specifications — print_gibbs_settings","title":"Display Current Gibbs Sampler Specifications — print_gibbs_settings","text":"function prints current settings Gibbs sampler readable format. includes information number draws, burn-ratio, number saved draws, tuning parameter tau.","code":""},{"path":"/reference/print_gibbs_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Current Gibbs Sampler Specifications — print_gibbs_settings","text":"","code":"print_gibbs_settings(global_settings)"},{"path":"/reference/print_gibbs_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Current Gibbs Sampler Specifications — print_gibbs_settings","text":"Prints formatted message current Gibbs sampler settings. function return values.","code":""},{"path":"/reference/quantiles_from_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Quantiles of Coefficients from Estimations — quantiles_from_estimates","title":"Compute Quantiles of Coefficients from Estimations — quantiles_from_estimates","text":"function takes results estimation process, typically stored data matrix array, computes specified quantiles. supports 1D, 2D, 3D data structures makes necessary adjustments calculations. multi-dimensional data, function performs percentile computation across column, retaining first column data 3D.","code":""},{"path":"/reference/quantiles_from_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Quantiles of Coefficients from Estimations — quantiles_from_estimates","text":"","code":"quantiles_from_estimates(data, include_mean = FALSE, probs = NULL)"},{"path":"/reference/quantiles_from_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Quantiles of Coefficients from Estimations — quantiles_from_estimates","text":"data list array. multi-dimensional, either 2D 3D. include_mean Logical. TRUE, mean coefficients also computed returned along quantiles. Default FALSE. probs numerical vector specifying probabilities percentiles computed. Default obtained get_quantiles().","code":""},{"path":"/reference/quantiles_from_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Quantiles of Coefficients from Estimations — quantiles_from_estimates","text":"named list computed percentiles coefficient. names prefixed \"q_\" suffixed percentile value multiplied 100 (e.g., \"q_5\", \"q_50\", \"q_95\"). include_mean TRUE, \"q_mean\" also included list.","code":""},{"path":"/reference/quantiles_from_forecasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Quantiles from Multiple Forecast Matrices — quantiles_from_forecasts","title":"Calculate Quantiles from Multiple Forecast Matrices — quantiles_from_forecasts","text":"function calculates specified quantiles  variable-time combination across draws.","code":""},{"path":"/reference/quantiles_from_forecasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Quantiles from Multiple Forecast Matrices — quantiles_from_forecasts","text":"","code":"quantiles_from_forecasts(forecasts, freq, probs = NULL)"},{"path":"/reference/quantiles_from_forecasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Quantiles from Multiple Forecast Matrices — quantiles_from_forecasts","text":"forecasts list matrices. matrix represent forecasts dimensions (rows columns) comparison. freq frequency data. probs numeric vector specifying quantiles compute. Default c(0.25, 0.5, 0.75, 1).","code":""},{"path":"/reference/quantiles_from_forecasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Quantiles from Multiple Forecast Matrices — quantiles_from_forecasts","text":"named list matrices, matrix corresponds original matrix forecasts. output matrix additional dimension corresponding computed quantiles, dimnames indicating quantile levels (e.g., \"q_25\" 25th percentile).","code":""},{"path":"/reference/rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the rate of change for a time series — rate","title":"Compute the rate of change for a time series — rate","text":"Required attributes input time series : series_type - \"rate\" \"level\" method - \"percentage\", \"diff_log\", \"none\", expression","code":""},{"path":"/reference/rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the rate of change for a time series — rate","text":"","code":"rate(x, ...)"},{"path":"/reference/rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the rate of change for a time series — rate","text":"x time series object. Supported classes ts ets (subclass ts). ... arguments passed methods (unused default method).","code":""},{"path":"/reference/rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the rate of change for a time series — rate","text":"ets object.","code":""},{"path":"/reference/rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the rate of change for a time series — rate","text":"","code":"x <- ets(1:10, series_type = \"level\", method = \"diff_log\") rate(x) #> rate, diff_log, c(1, 1) #> Time Series: #> Start = 2  #> End = 10  #> Frequency = 1  #> [1] 69.31472 40.54651 28.76821 22.31436 18.23216 15.41507 13.35314 11.77830 #> [9] 10.53605"},{"path":"/reference/rebase.html","id":null,"dir":"Reference","previous_headings":"","what":"Rebase Time Series Data Relative to a Base Period — rebase","title":"Rebase Time Series Data Relative to a Base Period — rebase","text":"Calculates rebased time series using given date range base period. base period average set 100, values scaled accordingly.","code":""},{"path":"/reference/rebase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rebase Time Series Data Relative to a Base Period — rebase","text":"","code":"rebase(x, start, end, ...)"},{"path":"/reference/rebase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rebase Time Series Data Relative to a Base Period — rebase","text":"x ets object. start time first observation.  Either single     number vector two numbers (second integer),     specify natural time     unit (1-based) number samples time unit.  See     examples use second form. end time last observation, specified way     start. ... arguments passed methods (unused default method).","code":""},{"path":"/reference/rebase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rebase Time Series Data Relative to a Base Period — rebase","text":"ets object level computed.","code":""},{"path":"/reference/set_gibbs_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Gibbs Settings — set_gibbs_settings","title":"Set Gibbs Settings — set_gibbs_settings","text":"Set Gibbs Settings","code":""},{"path":"/reference/set_gibbs_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Gibbs Settings — set_gibbs_settings","text":"","code":"set_gibbs_settings(settings, equation_settings, envir = the)"},{"path":"/reference/set_gibbs_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Gibbs Settings — set_gibbs_settings","text":"settings List system-wide/global settings. equation_settings List equation specific settings. envir Environment create gibbs_sampler . Defaults \"\".","code":""},{"path":"/reference/set_gibbs_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Gibbs Sampler Specifications — set_gibbs_spec","title":"Set Gibbs Sampler Specifications — set_gibbs_spec","text":"class updates Gibbs sampler specifications global environment variable $gibbs_sampler.","code":""},{"path":"/reference/set_gibbs_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Gibbs Sampler Specifications — set_gibbs_spec","text":"","code":"set_gibbs_spec(   ndraws = NULL,   burnin_ratio = NULL,   nstore = NULL,   tau = NULL,   ... )"},{"path":"/reference/set_gibbs_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Gibbs Sampler Specifications — set_gibbs_spec","text":"ndraws Integer specifying number Gibbs sampler draws. burnin_ratio Numeric specifying ratio burn-period. nstore Integer specifying frequency stored draws. tau Numeric tuning parameter enforcing acceptance rate. ... Unused arguments get discarded.","code":""},{"path":"/reference/set_gibbs_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Gibbs Sampler Specifications — set_gibbs_spec","text":"Invisible NULL. function updates $gibbs_sampler place.","code":""},{"path":"/reference/set_gibbs_spec.html","id":"gibbs-sampler-specifications","dir":"Reference","previous_headings":"","what":"Gibbs Sampler Specifications","title":"Set Gibbs Sampler Specifications — set_gibbs_spec","text":"ndraws: Integer specifying number Gibbs sampler draws. Default 2000. burnin_ratio: Numeric specifying ratio burn-period. Default 0.5. nstore: Integer specifying frequency stored draws. Default 1. tau: Numeric tuning parameter enforcing acceptance rate. Default 1.1.","code":""},{"path":"/reference/set_restrictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Restrictions for Observed Variables in Time Series Data — set_restrictions","title":"Set Restrictions for Observed Variables in Time Series Data — set_restrictions","text":"function generates list restrictions specified variables time series data frame, based values specified start end dates.","code":""},{"path":"/reference/set_restrictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Restrictions for Observed Variables in Time Series Data — set_restrictions","text":"","code":"set_restrictions(ts_data, variables_to_restrict, start, end)"},{"path":"/reference/set_restrictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Restrictions for Observed Variables in Time Series Data — set_restrictions","text":"ts_data list containing time series data. variables_to_restrict vector strings specifying names variables ts_data restricted. start starting date restrictions. end ending date restrictions.","code":""},{"path":"/reference/set_restrictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Restrictions for Observed Variables in Time Series Data — set_restrictions","text":"named list restrictions, names names variables variables_to_restrict. element list containing horizon, sequence 1 length value_at_date, value, truncated values variable start end.","code":""},{"path":"/reference/small_open_economy.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarterly time series of key macro variables for a small open economy (Switzerland) — small_open_economy","title":"Quarterly time series of key macro variables for a small open economy (Switzerland) — small_open_economy","text":"Quarterly time series key macro variables small open economy (Switzerland)","code":""},{"path":"/reference/small_open_economy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarterly time series of key macro variables for a small open economy (Switzerland) — small_open_economy","text":"","code":"small_open_economy"},{"path":"/reference/small_open_economy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Quarterly time series of key macro variables for a small open economy (Switzerland) — small_open_economy","text":"list 12 ts objects (quarterly): consumption Private consumption \\(C_t\\). investment Gross fixed capital formation \\(I_t\\). exports Exports \\(X_t\\). imports Imports \\(M_t\\). prices Price level \\(P_t\\). interest_rate Short‐term domestic interest rate \\(R_t\\). gdp Equilibrium output \\(GDP_t\\). domestic_demand Domestic demand \\(D_t\\). world_gdp World GDP (exogenous) \\(WGDP_t\\). interest_rate_germany German short‐term rate (exog) \\(R_{GE,t}\\). exchange_rate Nominal exchange rate (exog) \\(ER_t\\). oil_price Oil price (exogenous) \\(OP_t\\).","code":""},{"path":"/reference/small_open_economy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Quarterly time series of key macro variables for a small open economy (Switzerland) — small_open_economy","text":"https://www.seco.admin.ch/, https://kof.ethz.ch/","code":""},{"path":"/reference/summary.koma_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for koma_estimate objects — summary.koma_estimate","title":"Summary method for koma_estimate objects — summary.koma_estimate","text":"function provides summary koma_estimate objects. can return either texreg object ASCII table.","code":""},{"path":"/reference/summary.koma_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for koma_estimate objects — summary.koma_estimate","text":"","code":"# S3 method for class 'koma_estimate' summary(object, ...)"},{"path":"/reference/summary.koma_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for koma_estimate objects — summary.koma_estimate","text":"object koma_estimate object. ... Additional parameters: variables Optional. character vector variables summarize. Default NULL, means variables summarized. central_tendency Optional. string specifying measure central tendency (\"mean\", \"median\"). Default \"mean\". ci_low Optional. Lower bound confidence interval. Default 5. ci_up Optional. Upper bound confidence interval. Default 95. texreg_object Optional. TRUE, returns texreg object. Default FALSE, returns ASCII table. digits Optional. Number digits round numeric values. Default 2.","code":""},{"path":"/reference/summary.koma_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for koma_estimate objects — summary.koma_estimate","text":"Depending value texreg_object, returns either list texreg objects prints ASCII table.","code":""},{"path":"/reference/summary_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Summary Statistics for Estimates — summary_statistics","title":"Calculate Summary Statistics for Estimates — summary_statistics","text":"Computes summary statistics specified endogenous variable within system equations. returns coefficients standard errors equation's variables.","code":""},{"path":"/reference/summary_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Summary Statistics for Estimates — summary_statistics","text":"","code":"summary_statistics(   endogenous_variables,   estimates,   sys_eq,   central_tendency = \"mean\",   ci_low = 5,   ci_up = 95 )"},{"path":"/reference/summary_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Summary Statistics for Estimates — summary_statistics","text":"endogenous_variables character vector name(s) stochastic endogenous variable summarize. estimates list estimates stochastic endogenous variable. sys_eq list containing endogenous exogenous variables, character_gamma_matrix, character_beta_matrix. central_tendency character string indicating central tendency measure (\"mean\" \"median\") use summary statistics. Default \"mean\". ci_low lower bound confidence interval percentile. Default 5. ci_up upper bound confidence interval percentile. Default 95.","code":""},{"path":"/reference/summary_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Summary Statistics for Estimates — summary_statistics","text":"list summary statistics endogenous variable.","code":""},{"path":"/reference/system_of_equations.html","id":null,"dir":"Reference","previous_headings":"","what":"System of Equations Class — system_of_equations","title":"System of Equations Class — system_of_equations","text":"Create manipulate system equations.","code":""},{"path":"/reference/system_of_equations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"System of Equations Class — system_of_equations","text":"","code":"system_of_equations(equations = vector(), exogenous_variables = vector(), ...)"},{"path":"/reference/system_of_equations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"System of Equations Class — system_of_equations","text":"equations character string vector containing system equations. single string, equations separated commas. exogenous_variables character vector exogenous variables. ... Additional arguments future extensions.","code":""},{"path":"/reference/system_of_equations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"System of Equations Class — system_of_equations","text":"object class koma_seq following components: equations: character vector equations. endogenous_variables: character vector endogenous variables. stochastic_equations: character vector stochastic equations. identities: character vector identity equations. character_gamma_matrix: gamma matrix character form. character_beta_matrix: beta matrix character form. predetermined_variables: character vector lagged variables. total_exogenous_variables: character vector combined constant, predetermined, exogenous variables. priors: list priors per equation.","code":""},{"path":"/reference/system_of_equations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"System of Equations Class — system_of_equations","text":"function constructs object class koma_seq representing system equations, extracting organizing key components like endogenous variables, gamma matrix, beta matrix, . Equations separated commas provided single string.","code":""},{"path":"/reference/system_of_equations.html","id":"equations","dir":"Reference","previous_headings":"","what":"Equations","title":"System of Equations Class — system_of_equations","text":"Stochastic equations use ~ (e.g. y ~ x1 + x2). Identity equations use == (e.g. y == 0.5*x1 + 0.5*x2). Lagged variables denoted X.L(x) variable X lag L(x) (e.g. .L(1), .L(2)). Intercept included default, can also explicitly specify constant adding constant equation (e.g. y ~ constant + x1). exclude intercept, add +0 -1 equation (e.g. y ~ 0 + x1). details equation syntax, see vignette(\"equations\").","code":""},{"path":[]},{"path":"/reference/system_of_equations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"System of Equations Class — system_of_equations","text":"","code":"equations <-   \"consumption ~ gdp + consumption.L(1) + consumption.L(2), investment ~ gdp + investment.L(1) + real_interest_rate, current_account ~ current_account.L(1) + world_gdp, manufacturing ~ manufacturing.L(1) + world_gdp, service ~ service.L(1) + population + gdp, gdp == 0.4*manufacturing + 0.6*service\"  exogenous_variables <- c(\"real_interest_rate\", \"world_gdp\", \"population\")  system <- system_of_equations(equations, exogenous_variables) print(system) #>  #> ── System of Equations ───────────────────────────────────────────────────────── #>     consumption ~  constant + gdp + consumption.L(1) + consumption.L(2) #>      investment ~  constant + gdp + investment.L(1) + real_interest_rate #> current_account ~  constant + current_account.L(1) + world_gdp #>   manufacturing ~  constant + manufacturing.L(1) + world_gdp #>         service ~  constant + service.L(1) + population + gdp #>             gdp == 0.4 * manufacturing + 0.6 * service"},{"path":"/reference/target_j.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the target function for the jth equation — target_j","title":"Compute the target function for the jth equation — target_j","text":"target_j calculates target function used Metropolis-Hastings (MH) algorithm given equation \\(j\\). target function used MH algorithm accept reject proposed new states Markov chain.","code":""},{"path":"/reference/target_j.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the target function for the jth equation — target_j","text":"","code":"target_j(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_parameters_j )"},{"path":"/reference/target_j.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the target function for the jth equation — target_j","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_parameters_j \\((n_j \\times 1)\\) matrix parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/target_j.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the target function for the jth equation — target_j","text":"function returns evaluation target function, used decide whether accept reject proposed states MH algorithm. Returns NA gamma parameters.","code":""},{"path":"/reference/target_j_informative.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the target function for the jth equation for informative priors — target_j_informative","title":"Compute the target function for the jth equation for informative priors — target_j_informative","text":"target_j_informative calculates target function used Metropolis-Hastings (MH) algorithm given equation \\(j\\). target function used MH algorithm accept reject proposed new states Markov chain.","code":""},{"path":"/reference/target_j_informative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the target function for the jth equation for informative priors — target_j_informative","text":"","code":"target_j_informative(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_jw,   omega_jw,   theta_jw,   priors_j )"},{"path":"/reference/target_j_informative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the target function for the jth equation for informative priors — target_j_informative","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_jw \\((n_j \\times 1)\\) vector parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\). omega_jw \\({\\Omega}_j^{(w)}\\) theta_jw \\((k \\times nj+1)\\), \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/target_j_informative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the target function for the jth equation for informative priors — target_j_informative","text":"function returns evaluation target function, used decide whether accept reject proposed states MH algorithm. Returns NA gamma parameters.","code":""},{"path":"/reference/target_j_informative_initial.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the target function for the jth equation — target_j_informative_initial","title":"Compute the target function for the jth equation — target_j_informative_initial","text":"target_j_informative_initial calculates target function used Metropolis-Hastings (MH) algorithm given equation \\(j\\). target function used MH algorithm accept reject proposed new states Markov chain.","code":""},{"path":"/reference/target_j_informative_initial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the target function for the jth equation — target_j_informative_initial","text":"","code":"target_j_informative_initial(   y_matrix,   x_matrix,   character_gamma_matrix,   character_beta_matrix,   jx,   gamma_jw )"},{"path":"/reference/target_j_informative_initial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the target function for the jth equation — target_j_informative_initial","text":"y_matrix \\((T \\times n)\\) matrix \\(Y\\), \\(T\\) number observations \\(n\\) number equations, .e. endogenous variables. x_matrix \\((T \\times k)\\) matrix \\(X\\) observations \\(k\\) exogenous variables. character_gamma_matrix matrix \\(\\Gamma\\) holds coefficients character form equations. dimensions matrix \\((T \\times n)\\), \\(T\\) number observations \\(n\\) number equations. character_beta_matrix matrix \\(\\beta\\) holds coefficients character form equations. dimensions matrix \\((k \\times n)\\), \\(k\\) number exogenous variables \\(n\\) number equations. jx index equation \\(j\\). gamma_jw \\((n_j \\times 1)\\) vector parameters gamma matrix, \\(n_j\\) number endogenous variables equation \\(j\\).","code":""},{"path":"/reference/target_j_informative_initial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the target function for the jth equation — target_j_informative_initial","text":"function returns evaluation target function, used decide whether accept reject proposed states MH algorithm. Returns NA gamma parameters.","code":""},{"path":"/reference/the.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the internal environment of the package — the","title":"Define the internal environment of the package — the","text":"Define internal environment package","code":""},{"path":"/reference/the.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the internal environment of the package — the","text":"","code":"the"},{"path":"/reference/the.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Define the internal environment of the package — the","text":"object class environment length 1.","code":""},{"path":"/reference/to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Time Series from Wide to Long Format — to_long","title":"Convert Time Series from Wide to Long Format — to_long","text":"function returns data long format.","code":""},{"path":"/reference/to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Time Series from Wide to Long Format — to_long","text":"","code":"to_long(mts, start)"},{"path":"/reference/to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Time Series from Wide to Long Format — to_long","text":"mts multivariate time series object. start numeric value representing forecast start date.","code":""},{"path":"/reference/to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Time Series from Wide to Long Format — to_long","text":"data frame long format containing original data along sample status, dates, frame identifiers.","code":""},{"path":"/reference/type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the type of a koma_ts object — type","title":"Get the type of a koma_ts object — type","text":"Get type koma_ts object","code":""},{"path":"/reference/type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the type of a koma_ts object — type","text":"","code":"type(x, type, var = NULL, ...)"},{"path":"/reference/type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the type of a koma_ts object — type","text":"x koma_ts object. type type filter . var optional variable filter . ... arguments passed methods (unused default method).","code":""},{"path":"/reference/type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the type of a koma_ts object — type","text":"koma_ts object specified type.","code":""},{"path":"/reference/update_anker.html","id":null,"dir":"Reference","previous_headings":"","what":"Update anker — update_anker","title":"Update anker — update_anker","text":"function updates anker last observation realized data.","code":""},{"path":"/reference/update_anker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update anker — update_anker","text":"","code":"update_anker(x, y)"},{"path":"/reference/update_anker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update anker — update_anker","text":"x Time series object class koma_ts realized / historical data. y Time series object class koma_ts forecast data.","code":""},{"path":"/reference/update_anker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update anker — update_anker","text":"Return y class koma_ts updated anker.","code":""},{"path":"/reference/update_estimates_with_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Gamma and Beta Matrices with Identity Weights — update_estimates_with_weights","title":"Update Gamma and Beta Matrices with Identity Weights — update_estimates_with_weights","text":"function takes identities initial matrices gamma beta, updates values matrices based identity weights.","code":""},{"path":"/reference/update_estimates_with_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Gamma and Beta Matrices with Identity Weights — update_estimates_with_weights","text":"","code":"update_estimates_with_weights(identities, gamma_matrix, beta_matrix)"},{"path":"/reference/update_estimates_with_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Gamma and Beta Matrices with Identity Weights — update_estimates_with_weights","text":"identities list identity equations. gamma_matrix Initial gamma matrix derived median estimates. beta_matrix Initial beta matrix derived median estimates.","code":""},{"path":"/reference/update_estimates_with_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Gamma and Beta Matrices with Identity Weights — update_estimates_with_weights","text":"list containing: gamma_matrix: Gamma matrix updated identity weights. beta_matrix: Beta matrix updated identity weights.","code":""},{"path":[]},{"path":"/reference/update_identity_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Identity Weights — update_identity_weights","title":"Update Identity Weights — update_identity_weights","text":"Iteratively updates weights identity list (identities) based last value corresponding weights found weights list.","code":""},{"path":"/reference/update_identity_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Identity Weights — update_identity_weights","text":"","code":"update_identity_weights(weights, identities)"},{"path":"/reference/update_identity_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Identity Weights — update_identity_weights","text":"weights named list entry represents equation (e.g., \"gdp\"). equation named list, containing variable names (e.g., \"manufacturing\") dynamic weight values. Example: list(gdp = list(manufacturing = c(0.2, 0.3), service = c(0.7, 0.6))) identities named list, entry represents equation similar weights. equation sublists \"components\" variable names \"weights\" identity weights. Example: list(gdp = list(components = list(manufacturing = \"theta6_4\"),                 weights = list(theta6_4 = NULL)))","code":""},{"path":"/reference/update_identity_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Identity Weights — update_identity_weights","text":"named list containing updated identity weights equation variables, structure input identities.","code":""},{"path":"/reference/validate_completeness.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Completeness — validate_completeness","title":"Validate Completeness — validate_completeness","text":"function checks exogenous variables declared.","code":""},{"path":"/reference/validate_completeness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Completeness — validate_completeness","text":"","code":"validate_completeness(equations, exogenous_variables)"},{"path":"/reference/validate_completeness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Completeness — validate_completeness","text":"equations character string vector containing system equations. single string, equations separated commas. exogenous_variables character vector exogenous variables.","code":""},{"path":"/reference/validate_completeness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Completeness — validate_completeness","text":"Logical. Returns TRUE equation valid. Throws error specific message checks fail.","code":""},{"path":"/reference/validate_equation.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Individual Equation — validate_equation","title":"Validate Individual Equation — validate_equation","text":"function validates individual equation ensure follows specific structure. expected format equation \"left_variable == right_variables\", right_variables can combination variables separated '+', '-', '*'. function checks following: Validity variable names. Correct structure (exactly one '==' separator). Stochastic error term epsilon must last element. Duplicate regressors within single equation allowed.","code":""},{"path":"/reference/validate_equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Individual Equation — validate_equation","text":"","code":"validate_equation(equation)"},{"path":"/reference/validate_equation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Individual Equation — validate_equation","text":"equation character string representing equation format \"left_variable == right_variables\".","code":""},{"path":"/reference/validate_equation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Individual Equation — validate_equation","text":"Logical. Returns TRUE equation valid. Throws error specific message checks fail.","code":""},{"path":"/reference/validate_system_of_equations.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Equations — validate_system_of_equations","title":"Validate Equations — validate_system_of_equations","text":"function validates character vector equations, ensuring adhere specific format. equations format \"left_variable==right_variables\", right variables can separated '+', '-', '*'. function checks valid equation structure, valid variable names, duplicate regressors single equation, duplicate dependent variables across equations.","code":""},{"path":"/reference/validate_system_of_equations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Equations — validate_system_of_equations","text":"","code":"validate_system_of_equations(x)"},{"path":"/reference/validate_system_of_equations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Equations — validate_system_of_equations","text":"Returns object.","code":""},{"path":"/reference/vector_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Vector to Matrix — vector_to_matrix","title":"Convert Vector to Matrix — vector_to_matrix","text":"Given transformation matrix, vector parameters, constant vector, function constructs matrix specified row column dimensions. vector = transformation_matrix %*% parameters, constant_vector vector = vec(matrix)","code":""},{"path":"/reference/vector_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Vector to Matrix — vector_to_matrix","text":"","code":"vector_to_matrix(   transformation_matrix,   parameters,   constant_vector,   nrow,   ncol )"},{"path":"/reference/vector_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Vector to Matrix — vector_to_matrix","text":"transformation_matrix numeric matrix used parameter transformation. parameters numeric vector parameters. constant_vector numeric vector constant terms. nrow Number rows resulting matrix. ncol Number columns resulting matrix.","code":""},{"path":"/reference/vector_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Vector to Matrix — vector_to_matrix","text":"numeric matrix specified row column dimensions.","code":""},{"path":"/news/index.html","id":"koma-010","dir":"Changelog","previous_headings":"","what":"koma 0.1.0","title":"koma 0.1.0","text":"Initial github release.","code":""}]
